{"version":3,"sources":["components/order-details/order-details.module.css","components/modal-overlay/modal-overlay.module.css","components/error-text/error-text.module.css","components/ingredient/ingredient.module.css","components/burger-ingredients/burger-ingredients.module.css","pages/home/home.module.css","pages/ingredient/ingredient.module.css","pages/not-found/not-found.module.css","pages/order-info/order-info.module.css","components/app-header/app-header.module.css","components/ingredient-details/ingredient-details.module.css","services/constant.ts","components/app-header/app-header.tsx","services/hooks.ts","images/orderDone.svg","components/order-details/order-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/constructor-item/constructor-item.tsx","services/action/burger-constructor.ts","services/utils.ts","services/api.ts","services/action/burger-ingredients.ts","components/template-constructor-element/template-constructor-element.tsx","components/constructor-list/constructor-list.tsx","services/action/order-details.ts","components/error-text/error-text.tsx","components/burger-constructor/burger-constructor.tsx","components/ingredient/ingredient.tsx","components/ingredient-list/ingredient-list.tsx","components/burger-ingredients/burger-ingredients.tsx","pages/home/home.tsx","services/action/user.ts","pages/login/login.tsx","pages/register/register.tsx","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","components/sidebar-menu/sidebar-menu.tsx","pages/profile/profile.tsx","components/protected-route/protected-route.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredient/ingredient.tsx","pages/not-found/not-found.tsx","components/status-list/status-list.tsx","components/icon-ingredient/icon-ingredient.tsx","components/order-status/order-status.tsx","components/card-order/card-order.tsx","services/action/ws-feed.ts","pages/feed/feed.tsx","components/order-list/order-list.tsx","components/order-info/order-info.tsx","services/action/ws-my-orders.ts","pages/order-info/order-info.tsx","pages/order-history/order-history.tsx","components/app/app.tsx","services/reducers/burger-ingredients.ts","services/reducers/burger-constructor.ts","services/action/ingredient-details.ts","services/reducers/ingredient-details.ts","services/reducers/order-details.ts","services/reducers/user.ts","services/reducers/feed.ts","services/reducers/my-orders.ts","services/reducers/index.ts","services/middleware/socketMiddleware.ts","services/store.ts","index.tsx","components/card-order/card-order.module.css","pages/feed/feed.module.css","components/sidebar-menu/sidebar-menu.module.css","components/constructor-list/constructor-list.module.css","pages/profile/profile.module.css","pages/order-history/order-history.module.css","components/order-info/order-info.module.css","components/burger-constructor/burger-constructor.module.css","components/modal/modal.module.css","components/order-list/order-list.module.css","components/constructor-item/constructor-item.module.css","components/template-constructor-element/template-constructor-element.module.css","components/ingredient-list/ingredient-list.module.css","pages/login/login.module.css","pages/register/register.module.css","pages/forgot-password/forgot-password.module.css","pages/reset-password/reset-password.module.css","components/status-list/status-list.module.css","components/icon-ingredient/icon-ingredient.module.css"],"names":["module","exports","orderStatus","AppHeader","isHome","useRouteMatch","path","exact","isProfile","isFeed","className","styles","header","headerContent","menu","menu__list","menu__item","to","linkHeader","activeClassName","linkHeader__active","type","logo","account","useDispatch","dispatchHook","useSelector","selectorHook","OrderDetails","order","style","orderDetails","src","orderDone","alt","ModalOverlay","children","onClose","styleModal","overlay","onClick","modalRoot","document","getElementById","Modal","title","useEffect","closeOnEscape","e","key","addEventListener","removeEventListener","ReactDOM","createPortal","popup","stopPropagation","popup__title","popup__close","ConstructorItem","moveItem","index","id","ref","useRef","useDrop","accept","collect","monitor","isHover","isOver","drop","item","current","dragIndex","hoverIndex","useDrag","styleHover","outline","outlineOffset","drag","burgerConstructorList__innerItem","wrapperConstructorElement","ADD_INGREDIENT","ADD_BUN","DELETE_ITEM","REORDER_INGREDIENTS","SET_DEFAULT_VALUE_INGREDIENTS","REFRESH_TOKEN","ACCESS_TOKEN","setCookie","name","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","cookie","deleteCookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","timeSince","date","currentDate","bufferDate","setHours","setMinutes","setSeconds","setMilliseconds","formatter","Intl","RelativeTimeFormat","numeric","intervalDay","Math","floor","timeAgo","yyyy","getFullYear","mm","getMonth","slice","today","getDate","format","mins","getMinutes","getHours","getHoursAndMins","currentTimeZoneOffsetInHours","getTimezoneOffset","abs","toString","getTimeZone","BASE_URL","WS_BASE_URL","checkResponse","res","a","json","ok","Promise","reject","status","refreshTokenRequest","token","fetch","method","headers","body","JSON","stringify","then","loginRequest","data","getProfileRequest","Authorization","refreshTokenAndFetchRetry","callback","responseJsonCallBack","tokenJson","accessToken","split","refreshToken","console","log","BURGER_INGREDIENTS_REQUEST","BURGER_INGREDIENTS_SUCCESS","BURGER_INGREDIENTS_FAILED","INCREMENT_INGREDIENTS","INCREMENT_BUN","DECREMENT_INGREDIENTS","RESET_QTY_INGREDIENTS","getIngredientItemsThunk","dispatch","payload","catch","TemplateConstructorElement","templateConstructorElement","templateConstructorElement__row","ConstructorList","memo","ingredientList","itemsWithoutBun","useMemo","filter","itemBun","uuid","uuidv4","incrementQtyBun","addIngredientToConstructor","incrementQtyIngredient","dropRef","removeItem","useCallback","elements","dragElement","splice","burgerconstructorList","length","burgerconstructorList__item","isLocked","text","price","thumbnail","image","burgerconstructorList__inner","burgerconstructorListOverflowHidden__inner","map","handleClose","ORDER_REQUEST","ORDER_SUCCESS","ORDER_FAILED","sendOrderThunk","idList","ingredients","sendOrderRequest","ErrorText","errorText","initialStateButton","count","BurgerConstructor","state","burgerConstructor","user","userInfo","history","useHistory","orderRequest","orderInfo","success","useState","textButton","seTextButton","show","setShow","total","reduce","accumulator","element","idIngredientList","_id","orderNumber","number","orderFailed","handlerOrder","push","pathname","interval","setInterval","prevState","clearInterval","burgerConstructor__total","buttonOrder","disabled","size","Ingredient","qty","dragRef","card__prics","IngredientList","forwardRef","list","typeCard","location","useLocation","filteredItems","cardStyle","card__list","background","textDecoration","color","card__listItem","BurgerIngredients","setCurrent","refBunDiv","refSauceDiv","refMainDiv","BUN","SAUCE","MAIN","burgerIngredients","handleTab","scrollIntoView","behavior","handlerScroll","scrollTop","target","posOfSectionBun","offsetTop","posOfSauceBun","display","active","onScroll","HomePage","burgerIngredientsFailed","main","DndProvider","backend","HTML5Backend","REGISTER_REQUEST","REGISTER_REQUEST_SUCCESS","REGISTER_REQUEST_FAILED","GET_CODE_RESET_PASSWORD_REQUEST","GET_CODE_RESET_PASSWORD_SUCCESS","GET_CODE_RESET_PASSWORD_FAILED","CONFIRM_RESET_PASSWORD_REQUEST","CONFIRM_RESET_PASSWORD_SUCCESS","CONFIRM_RESET_PASSWORD_FAILED","LOGIN_REQUEST","LOGIN_REQUEST_FAILED","LOGIN_REQUEST_SUCCESS","LOGOUT_REQUEST","LOGOUT_REQUEST_FAILED","LOGOUT_REQUEST_SUCCESS","GET_PROFILE_REQUEST","GET_PROFILE_REQUEST_FAILED","GET_PROFILE_REQUEST_SUCCESS","getProfileFailedAction","getProfileSuccessAction","registerThunk","registerRequest","resetPasswordThunk","resetPasswordRequest","confirmResetPassThunk","afterLogout","confirmResetPassRequest","updateProfileThunk","email","password","mode","updateProfileRequest","logoutThunk","LoginPage","store","setState","handleChange","from","login","form","onSubmit","preventDefault","onChange","htmlType","RegisterPage","registerInfo","request","register","placeholder","ForgotPasswordPage","forgotPassword","ResetPasswordPage","showPassword","setShowPassword","resetPassword","icon","onIconClick","preValue","setStyleActiveLink","isActive","link__active","link","SidebarMenu","onClickLogoutLink","sidebarMenu","sidebarMenu__item","ProfilePage","inputEmailRef","inputPassRef","inputNameRef","emailValue","nameValue","stateRef","isFormChanged","handleIconClick","nameInput","onBlur","focus","handleUpdateProfile","handleCancelChange","profile","profile__container","profile__wrapper","profileForm","ProtectedRoute","isUserLoaded","rest","render","IngredientDetails","useParams","ingredientInfo","find","ingredientDetails","image_large","ingredientDetails__nutritionalValue","ingredientDetails__nutritionaValueItem","ingredientDetails__nutritionaName","ingredientDetails__nutritionaCount","calories","proteins","fat","carbohydrates","IngredientPage","ingredient","NotFoundPage","notFound","StatusList","colorTextList","colorListStyle","statusList","statusList__item","IconIngredient","more","opacity","IconIngredient__img","IconIngredient__text","statusText","done","pending","created","OrderStatus","styleText","CardOrder","orderNameBurger","orderDateTime","idListIngredient","onlyUniqueIcon","maxQuantityIcon","dateTime","ingredientsIcon","Array","Set","totalSum","currentValue","listIcon","cardOrder__listIngredients","cardOrder__listIngredientItem","zIndex","right","position","image_mobile","cardOrder","cardOrder_wrapper","cardOrder__info","cardOrder__orderNumber","cardOrder__dateNumber","cardOrder__name","cardOrder__orderDetails","cardOrder__total","FEED_CONNECTION_INIT","FEED_CONNECTION_CLOSE","FEED_CONNECTION_SUCCESS","FEED_CONNECTION_ERROR","FEED_CONNECTION_CLOSED","FEED_GET_MESSAGE","feedWsInit","feedWsClose","FeedPage","feed","totalToday","orders","listByDoneOrders","listByPendingOrders","feedPage","feedPage__wrapper","feedPage__content","feedList","feedList__item","createdAt","feedStatusLists","orderAllTime","orderToday","OrderList","orderList","orderList__item","orderList__total","OrderInfo","myOrders","allOrders","searchOrder","listOrder","parseInt","ingredientsCurrentOrder","ingredientsListWithCount","Map","forEach","el","has","get","set","Object","assign","maxWidth","orderInfo__header","orderInfo__main","values","orderInfo__footer","orderInfo__total","MY_ORDERS_CONNECTION_INIT","MY_ORDERS_CONNECTION_CLOSE","MY_ORDERS_CONNECTION_SUCCESS","MY_ORDERS_CONNECTION_ERROR","MY_ORDERS_CONNECTION_CLOSED","MY_ORDERS_GET_MESSAGE","myOrdersWsInit","myOrdersWsClose","OrderInfoPage","OrderHistoryPage","orderHistory","orderHistory__container","orderHistory__wrapper","orderHistoryList","reverse","orderHistoryList__item","v4","App","setUserLoaded","init","message","handelCloseModal","goBack","action","params","component","OrderPage","ingredientsInitialState","burgerIngredientsRequest","constructorInitialState","SET_INGREDIENT_DETAIL","INIT_INGREDIENT_DETAIL","ingredientDetailState","__v","orderInitState","userState","failedRequest","codePasswordInfo","confirmResetPass","loginInfo","getProfileInfo","logoutInfo","initState","connected","error","rootReducer","combineReducers","indexElement","findIndex","socketMiddleware","wsActions","socket","next","wsInit","wsClose","wsSendMessage","onOpen","onError","onMessage","WebSocket","close","onopen","event","onerror","onmessage","parsedData","parse","restParsedData","onclose","send","feedWsActions","myOrdersWsActions","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","createStore","StrictMode"],"mappings":"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","file":"static/js/main.a7715c88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderDetails\":\"order-details_orderDetails__1lWq4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__br2gS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorText\":\"error-text_errorText__2NNEv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card__prics\":\"ingredient_card__prics__1orQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerIngredients\":\"burger-ingredients_burgerIngredients__1loa2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"home_main__2ZWwt\",\"mainColumn\":\"home_mainColumn__QA-CR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ingredient_ingredient__3cu4K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"not-found_notFound__24LHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderInfo\":\"order-info_orderInfo__1x3TG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__3KCCX\",\"headerContent\":\"app-header_headerContent__3rwi2\",\"menu\":\"app-header_menu__3yxhK\",\"menu__list\":\"app-header_menu__list__3jrzK\",\"menu__item\":\"app-header_menu__item__366tE\",\"account\":\"app-header_account__3BHAe\",\"logo\":\"app-header_logo__VMhBG\",\"linkHeader\":\"app-header_linkHeader__2HAXt\",\"linkHeader__active\":\"app-header_linkHeader__active__30SNj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientDetails\":\"ingredient-details_ingredientDetails__3HrXQ\",\"ingredientDetails__title\":\"ingredient-details_ingredientDetails__title__-eoIz\",\"ingredientDetails__nutritionalValue\":\"ingredient-details_ingredientDetails__nutritionalValue__2sWE_\",\"ingredientDetails__nutritionaValueItem\":\"ingredient-details_ingredientDetails__nutritionaValueItem__3dtr_\"};","export const REFRESH_TOKEN: \"refresh_token\" = \"refresh_token\";\r\nexport const ACCESS_TOKEN: \"access_token\" = \"access_token\";\r\nexport const JWT_EXPIRED: \"jwt expired\" = \"jwt expired\";\r\n\r\n// Статусы заказа\r\n\r\nexport enum orderStatus {\r\n  done = \"done\",\r\n  pending = \"pending\",\r\n  created = \"created\",\r\n}\r\n","import {\r\n  Logo,\r\n  BurgerIcon,\r\n  ListIcon,\r\n  ProfileIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { FC } from \"react\";\r\nimport { NavLink, useRouteMatch } from \"react-router-dom\";\r\nimport styles from \"./app-header.module.css\";\r\n\r\nconst AppHeader: FC = () => {\r\n  const isHome = !!useRouteMatch({\r\n    path: \"/\",\r\n    exact: true,\r\n  });\r\n  const isProfile = !!useRouteMatch(\"/profile\");\r\n  const isFeed = !!useRouteMatch(\"/feed\");\r\n\r\n  return (\r\n    <header className={`pt-4 pb-4 ${styles.header}`}>\r\n      <div className={styles.headerContent}>\r\n        <nav className={`${styles.menu}`}>\r\n          <ul className={`${styles.menu__list}`}>\r\n            <li className={`pr-5 ${styles.menu__item}`}>\r\n              <NavLink\r\n                exact\r\n                to=\"/\"\r\n                className={styles.linkHeader}\r\n                activeClassName={styles.linkHeader__active}\r\n              >\r\n                <BurgerIcon type={isHome ? \"primary\" : \"secondary\"} />\r\n                <p className=\"pl-2 text text_type_main-default\">Конструктор</p>\r\n              </NavLink>\r\n            </li>\r\n            <li className={`pl-5 pr-5 ${styles.menu__item}`}>\r\n              <NavLink\r\n                to=\"/feed\"\r\n                className={styles.linkHeader}\r\n                activeClassName={styles.linkHeader__active}\r\n              >\r\n                <ListIcon type={isFeed ? \"primary\" : \"secondary\"} />\r\n                <p className=\"pl-2 text text_type_main-default\">\r\n                  Лента заказов\r\n                </p>\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className={styles.logo}>\r\n          <Logo />\r\n        </div>\r\n        <div className={styles.account}>\r\n          <NavLink\r\n            to=\"/profile\"\r\n            className={styles.linkHeader}\r\n            activeClassName={styles.linkHeader__active}\r\n          >\r\n            <ProfileIcon type={isProfile ? \"primary\" : \"secondary\"} />\r\n            <p className=\"pl-2 text text_type_main-default\">Личный кабинет</p>\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import {\n  TypedUseSelectorHook,\n  useDispatch as dispatchHook,\n  useSelector as selectorHook\n} from 'react-redux';\nimport { AppDispatch, AppThunk, RootState } from './types';\n\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;","export default __webpack_public_path__ + \"static/media/orderDone.6d4020a5.svg\";","import style from \"./order-details.module.css\";\r\nimport orderDone from \"../../images/orderDone.svg\";\r\nimport { FC } from \"react\";\r\nimport { TOrderDetails } from \"../../services/types/data\";\r\n\r\nconst OrderDetails: FC<TOrderDetails> = ({ order }) => {\r\n  return (\r\n    <div className={`${style.orderDetails} pt-20 pl-25 pr-25`}>\r\n      <h2 className=\"text text_type_digits-large pb-8\">{order}</h2>\r\n      <p className=\"pb-20 text text_type_main-medium\">идентификатор заказа</p>\r\n      <img className=\"pb-15\" src={orderDone} alt=\"Заказ Выполнен\" />\r\n      <p className=\"pb-2 text text_type_main-small\">\r\n        Ваш заказ начали готовить\r\n      </p>\r\n      <p className=\"pb-30 text text_type_main-small\">\r\n        Дождитесь готовности на орбитальной станции\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","import styleModal from \"./modal-overlay.module.css\";\nimport { FC } from \"react\";\nimport { TModalOverlay } from \"../../services/types/data\";\n\nconst ModalOverlay: FC<TModalOverlay> = ({ children, onClose }) => {\n  return (\n    <div className={`${styleModal.overlay}`} onClick={onClose}>\n      {children}\n    </div>\n  );\n};\n\nexport default ModalOverlay;\n","import style from \"./modal.module.css\";\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\nimport { useEffect, FC } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { TModal } from \"../../services/types/data\";\r\n\r\nconst modalRoot = document.getElementById(\"modal\") as HTMLDivElement;\r\n\r\nconst Modal: FC<TModal> = ({ title, onClose, children }) => {\r\n  useEffect(() => {\r\n    const closeOnEscape = (e: KeyboardEvent): void => {\r\n      if (e.key === \"Escape\") {\r\n        onClose();\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", closeOnEscape);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", closeOnEscape);\r\n    };\r\n  }, []);\r\n\r\n  return ReactDOM.createPortal(\r\n    <ModalOverlay onClose={onClose}>\r\n      <div className={style.popup} onClick={(e) => e.stopPropagation()}>\r\n        {title && (\r\n          <h2\r\n            className={`${style.popup__title} text text_type_main-large pr-10 mb-10`}\r\n          >\r\n            {title}\r\n          </h2>\r\n        )}\r\n        {children}\r\n        <div className={style.popup__close} onClick={onClose}>\r\n          <CloseIcon type=\"primary\" />\r\n        </div>\r\n      </div>\r\n    </ModalOverlay>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { DragIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { FC, useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport style from \"./constructor-item.module.css\";\nimport CSS from \"csstype\";\nimport { TIngredient, TConstructorItem } from \"../../services/types/data\";\n\nconst ConstructorItem: FC<TConstructorItem> = ({\n  children,\n  moveItem,\n  index,\n  id,\n}) => {\n  const ref = useRef(null);\n  const [{ isHover }, drop] = useDrop({\n    accept: \"constructorItem\",\n    collect: (monitor) => ({\n      isHover: monitor.isOver(),\n    }),\n    drop(item: TIngredient) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index!;\n      const hoverIndex = index;\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      moveItem(dragIndex, hoverIndex);\n      item.index = hoverIndex;\n    },\n  });\n  const [, drag] = useDrag({\n    type: \"constructorItem\",\n    item: () => {\n      return { id, index };\n    },\n  });\n  const styleHover: CSS.Properties | null = isHover\n    ? {\n        outline: \"3px solid #8b00ff\",\n        outlineOffset: \"-3px\",\n      }\n    : {};\n  drag(drop(ref));\n  return (\n    <li ref={ref} className={style.burgerConstructorList__innerItem}>\n      <DragIcon type=\"primary\" />\n      <div className={style.wrapperConstructorElement} style={styleHover}>\n        {children}\n      </div>\n    </li>\n  );\n};\n\nexport default ConstructorItem;\n","import { TIngredientWithUniqKey } from \"../types/data\";\n\nexport const ADD_INGREDIENT: \"ADD_INGREDIENT\" = \"ADD_INGREDIENT\";\nexport const ADD_BUN: \"ADD_BUN\" = \"ADD_BUN\";\nexport const DELETE_ITEM: \"DELETE_ITEM\" = \"DELETE_ITEM\";\nexport const REORDER_INGREDIENTS: \"REORDER_INGREDIENTS\" = \"REORDER_INGREDIENTS\";\nexport const SET_DEFAULT_VALUE_INGREDIENTS: \"SET_DEFAULT_VALUE_INGREDIENTS\" =\n  \"SET_DEFAULT_VALUE_INGREDIENTS\";\n\nexport interface IAddIngredientToConstructor {\n  readonly type: typeof ADD_INGREDIENT;\n  readonly payload: TIngredientWithUniqKey;\n}\n\nexport interface IAddBunToConstructor {\n  readonly type: typeof ADD_BUN;\n  readonly payload: TIngredientWithUniqKey;\n}\n\nexport interface IDeleteItemById {\n  readonly type: typeof DELETE_ITEM;\n  readonly id: string;\n}\n\nexport interface IReorderIngredients {\n  readonly type: typeof REORDER_INGREDIENTS;\n  payload: ReadonlyArray<TIngredientWithUniqKey>;\n}\n\nexport interface ISetDefaultValueIngredients {\n  readonly type: typeof SET_DEFAULT_VALUE_INGREDIENTS;\n}\n\nexport const addIngredientToConstructor = (\n  payload: TIngredientWithUniqKey\n): IAddIngredientToConstructor => ({\n  type: ADD_INGREDIENT,\n  payload,\n});\n\nexport const addBunToConstructor = (\n  payload: TIngredientWithUniqKey\n): IAddBunToConstructor => ({\n  type: ADD_BUN,\n  payload,\n});\n\nexport const deleteItemById = (id: string): IDeleteItemById => ({\n  type: DELETE_ITEM,\n  id,\n});\n\nexport const reorderIngredients = (\n  payload: ReadonlyArray<TIngredientWithUniqKey>\n): IReorderIngredients => ({\n  type: REORDER_INGREDIENTS,\n  payload,\n});\n\nexport const setDefaultValueIngredients = (): ISetDefaultValueIngredients => ({\n  type: SET_DEFAULT_VALUE_INGREDIENTS,\n});\n\nexport type TBurgerConstructorActions =\n  | IAddIngredientToConstructor\n  | IAddBunToConstructor\n  | IDeleteItemById\n  | IReorderIngredients\n  | ISetDefaultValueIngredients;\n","export function setCookie(\r\n  name: string,\r\n  value: string,\r\n  props: { [key: string]: any } & { expires?: number | Date | string } = {}\r\n) {\r\n  props = props || {};\r\n  let exp = props.expires;\r\n  if (typeof exp == \"number\" && exp) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exp * 1000);\r\n    exp = props.expires = d;\r\n  }\r\n  if (exp && (exp as Date).toUTCString) {\r\n    props.expires = (exp as Date).toUTCString();\r\n  }\r\n  value = encodeURIComponent(value);\r\n  let updatedCookie = name + \"=\" + value;\r\n  for (const propName in props) {\r\n    updatedCookie += \"; \" + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += \"=\" + propValue;\r\n    }\r\n  }\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport function deleteCookie(name: string) {\r\n  setCookie(name, \"\", { expires: -1 });\r\n}\r\n\r\nexport function getCookie(name: string): string | undefined {\r\n  const matches = document.cookie.match(\r\n    new RegExp(\r\n      \"(?:^|; )\" + name.replace(/([$?*|{}\\]\\\\^])/g, \"\\\\$1\") + \"=([^;]*)\"\r\n    )\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function timeSince(date: Date): string {\r\n  const currentDate = new Date();\r\n  const bufferDate = new Date(date.getTime());\r\n  currentDate.setHours(0);\r\n  currentDate.setMinutes(0);\r\n  currentDate.setSeconds(0);\r\n  currentDate.setMilliseconds(0);\r\n\r\n  date.setHours(0);\r\n  date.setMinutes(0);\r\n  date.setSeconds(0);\r\n  date.setMilliseconds(0);\r\n\r\n  const formatter = new Intl.RelativeTimeFormat(\"ru\", { numeric: \"auto\" });\r\n\r\n  let seconds = Math.floor((currentDate.getTime() - date.getTime()) / 1000);\r\n  let intervalDay = seconds / 86400;\r\n\r\n  let timeAgo = null;\r\n\r\n  const yyyy = bufferDate.getFullYear();\r\n  const mm = (\"0\" + (bufferDate.getMonth() + 1)).slice(-2);\r\n  const dd = (\"0\" + bufferDate.getDate()).slice(-2);\r\n  const today = dd + \".\" + mm + \".\" + yyyy;\r\n\r\n  if (intervalDay < 7) {\r\n    timeAgo = formatter.format(-1 * Math.floor(intervalDay), \"days\");\r\n  }\r\n\r\n  return `${timeAgo || today}, ${getHoursAndMins(\r\n    bufferDate\r\n  )} i-GMT${getTimeZone()}`;\r\n}\r\n\r\nexport function getHoursAndMins(date: Date) {\r\n  const mins = (\"0\" + date.getMinutes()).slice(-2);\r\n  const hours = (\"0\" + date.getHours()).slice(-2);\r\n  return hours + \":\" + mins;\r\n}\r\n\r\nfunction getTimeZone(): string {\r\n  const currentTimeZoneOffsetInHours = new Date().getTimezoneOffset() / 60;\r\n  if (currentTimeZoneOffsetInHours > 0) {\r\n    return `-${Math.abs(currentTimeZoneOffsetInHours)}`;\r\n  } else if (currentTimeZoneOffsetInHours < 0) {\r\n    return `+${Math.abs(currentTimeZoneOffsetInHours)}`;\r\n  }\r\n  return currentTimeZoneOffsetInHours.toString();\r\n}\r\n","import { ACCESS_TOKEN, REFRESH_TOKEN } from \"./constant\";\r\nimport {\r\n  TGetCodeForResetPassRQ,\r\n  TIngredient,\r\n  TOrderSuccess,\r\n  TRegisterRequest,\r\n  TRegisterResponse,\r\n  TGetCodeForResetPassResponse,\r\n  TConfirmResetPassRQ,\r\n  TConfirmResetPassResponse,\r\n  TRefreshTokenResponse,\r\n  TLoginResponse,\r\n  TProfileResponse,\r\n  TLogoutResponse,\r\n  TUpdateProfileRq,\r\n} from \"./types/data\";\r\nimport { getCookie, setCookie } from \"./utils\";\r\n\r\nconst BASE_URL = \"https://norma.nomoreparties.space\";\r\nconst WS_BASE_URL = \"wss://norma.nomoreparties.space\";\r\n\r\nconst checkResponse = async (res: Response): Promise<any> => {\r\n  let json = await res.json();\r\n\r\n  if (res.ok) {\r\n    return json;\r\n  }\r\n  return json\r\n    ? Promise.reject({ ...json, status: res.status })\r\n    : Promise.reject({ status: res.status });\r\n};\r\n\r\nexport const getIngredientItemsRequest = (): Promise<{\r\n  data: ReadonlyArray<TIngredient>;\r\n}> => {\r\n  return fetch(`${BASE_URL}/api/ingredients`).then(checkResponse);\r\n};\r\n\r\nexport const sendOrderRequest = (\r\n  idList: ReadonlyArray<string>\r\n): Promise<TOrderSuccess> => {\r\n  return fetch(`${BASE_URL}/api/orders`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + getCookie(ACCESS_TOKEN),\r\n    },\r\n    body: JSON.stringify({\r\n      ingredients: idList,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const registerRequest = (\r\n  data: Readonly<TRegisterRequest>\r\n): Promise<TRegisterResponse> => {\r\n  return fetch(`${BASE_URL}/api/auth/register`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      ...data,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const resetPasswordRequest = (\r\n  data: Readonly<TGetCodeForResetPassRQ>\r\n): Promise<TGetCodeForResetPassResponse> => {\r\n  return fetch(`${BASE_URL}/api/password-reset`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      ...data,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const confirmResetPassRequest = (\r\n  data: Readonly<TConfirmResetPassRQ>\r\n): Promise<TConfirmResetPassResponse> => {\r\n  return fetch(`${BASE_URL}/api/password-reset/reset`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      ...data,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const refreshTokenRequest = (token: {\r\n  token: string;\r\n}): Promise<TRefreshTokenResponse> => {\r\n  return fetch(`${BASE_URL}/api/auth/token`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      token,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const loginRequest = (data: {\r\n  email: string;\r\n  password: string;\r\n}): Promise<TLoginResponse> => {\r\n  return fetch(`${BASE_URL}/api/auth/login`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      ...data,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const getProfileRequest = (): Promise<TProfileResponse> => {\r\n  return fetch(`${BASE_URL}/api/auth/user`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + getCookie(ACCESS_TOKEN),\r\n    },\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const updateProfileRequest = ({\r\n  email,\r\n  password,\r\n  name,\r\n}: TUpdateProfileRq): Promise<TProfileResponse> => {\r\n  return fetch(`${BASE_URL}/api/auth/user`, {\r\n    method: \"PATCH\",\r\n    mode: \"cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + getCookie(ACCESS_TOKEN),\r\n    },\r\n    body: JSON.stringify({\r\n      email,\r\n      password,\r\n      name,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const logoutRequest = (token: {\r\n  token: string;\r\n}): Promise<TLogoutResponse> => {\r\n  return fetch(`${BASE_URL}/api/auth/logout`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      token,\r\n    }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const refreshTokenAndFetchRetry = async (callback: any) => {\r\n  let token = getCookie(REFRESH_TOKEN);\r\n  let responseJsonCallBack = null;\r\n  if (token) {\r\n    try {\r\n      const tokenJson = await refreshTokenRequest({ token });\r\n      if (tokenJson.accessToken) {\r\n        setCookie(ACCESS_TOKEN, tokenJson.accessToken.split(\"Bearer \")[1]);\r\n      }\r\n      if (tokenJson.refreshToken) {\r\n        setCookie(REFRESH_TOKEN, tokenJson.refreshToken);\r\n      }\r\n      responseJsonCallBack = await callback();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  return responseJsonCallBack;\r\n};\r\n\r\nexport { BASE_URL, WS_BASE_URL, checkResponse };\r\n","import { getIngredientItemsRequest } from \"../api\";\nimport { AppDispatch, AppThunk } from \"../types\";\nimport { TIngredient } from \"../types/data\";\n\nexport const BURGER_INGREDIENTS_REQUEST: \"BURGER_INGREDIENTS_REQUEST\" =\n  \"BURGER_INGREDIENTS_REQUEST\";\nexport const BURGER_INGREDIENTS_SUCCESS: \"BURGER_INGREDIENTS_SUCCESS\" =\n  \"BURGER_INGREDIENTS_SUCCESS\";\nexport const BURGER_INGREDIENTS_FAILED: \"BURGER_INGREDIENTS_FAILED\" =\n  \"BURGER_INGREDIENTS_FAILED\";\nexport const INCREMENT_INGREDIENTS: \"INCREMENT_INGREDIENTS\" =\n  \"INCREMENT_INGREDIENTS\";\nexport const INCREMENT_BUN: \"INCREMENT_BUN\" = \"INCREMENT_BUN\";\nexport const DECREMENT_INGREDIENTS: \"DECREMENT_INGREDIENTS\" =\n  \"DECREMENT_INGREDIENTS\";\nexport const RESET_QTY_INGREDIENTS: \"RESET_QTY_INGREDIENTS\" =\n  \"RESET_QTY_INGREDIENTS\";\n\nexport interface IReqIngredient {\n  readonly type: typeof BURGER_INGREDIENTS_REQUEST;\n}\n\nexport interface ISetIngredientsValue {\n  readonly type: typeof BURGER_INGREDIENTS_SUCCESS;\n  readonly payload: ReadonlyArray<TIngredient>;\n}\n\nexport interface ISetReqIngredientsFailed {\n  readonly type: typeof BURGER_INGREDIENTS_FAILED;\n}\n\nexport interface IIncrementQtyIngredient {\n  readonly type: typeof INCREMENT_INGREDIENTS;\n  readonly payload: TIngredient;\n}\n\nexport interface IIncrementQtyBunt {\n  readonly type: typeof INCREMENT_BUN;\n  readonly payload: TIngredient;\n}\n\nexport interface IDecrementQtyIngredients {\n  readonly type: typeof DECREMENT_INGREDIENTS;\n  readonly payload: TIngredient;\n}\n\nexport interface IResetQtyIngredients {\n  readonly type: typeof RESET_QTY_INGREDIENTS;\n}\n\nexport const reqIngredient = (): IReqIngredient => ({\n  type: BURGER_INGREDIENTS_REQUEST,\n});\n\nexport const setIngredientsValue = (\n  payload: ReadonlyArray<TIngredient>\n): ISetIngredientsValue => ({\n  type: BURGER_INGREDIENTS_SUCCESS,\n  payload,\n});\n\nexport const setReqIngredientsFailed = (): ISetReqIngredientsFailed => ({\n  type: BURGER_INGREDIENTS_FAILED,\n});\n\nexport const incrementQtyIngredient = (\n  payload: TIngredient\n): IIncrementQtyIngredient => ({\n  type: INCREMENT_INGREDIENTS,\n  payload,\n});\n\nexport const incrementQtyBun = (payload: TIngredient): IIncrementQtyBunt => ({\n  type: INCREMENT_BUN,\n  payload,\n});\n\nexport const decrementQtyIngredients = (\n  payload: TIngredient\n): IDecrementQtyIngredients => ({\n  type: DECREMENT_INGREDIENTS,\n  payload,\n});\n\nexport const resetQtyIngredients = (): IResetQtyIngredients => ({\n  type: RESET_QTY_INGREDIENTS,\n});\n\nexport const getIngredientItemsThunk: AppThunk = () => {\n  return function (dispatch: AppDispatch) {\n    dispatch(reqIngredient());\n    getIngredientItemsRequest()\n      .then((res) => {\n        dispatch(setIngredientsValue(res.data));\n      })\n      .catch((e) => {\n        console.log(e);\n        dispatch(setReqIngredientsFailed());\n      });\n  };\n};\n\nexport type TBurgerIngredientsActions =\n  | IReqIngredient\n  | ISetIngredientsValue\n  | ISetReqIngredientsFailed\n  | IIncrementQtyIngredient\n  | IIncrementQtyBunt\n  | IDecrementQtyIngredients\n  | IResetQtyIngredients;\n","import style from \"./template-constructor-element.module.css\";\r\nimport { FC } from \"react\";\r\nconst TemplateConstructorElement: FC = () => {\r\n  return (\r\n    <div className={style.templateConstructorElement}>\r\n      <div className={style.templateConstructorElement__row}>\r\n        Перетащите сюда ингредиенты\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TemplateConstructorElement;\r\n","import { useDrop } from \"react-dnd\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FC, useCallback, useMemo, memo } from \"react\";\r\nimport style from \"./constructor-list.module.css\";\r\nimport { ConstructorElement } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport ConstructorItem from \"../constructor-item/constructor-item\";\r\nimport {\r\n  addIngredientToConstructor,\r\n  addBunToConstructor,\r\n  deleteItemById,\r\n  reorderIngredients,\r\n} from \"../../services/action/burger-constructor\";\r\nimport {\r\n  decrementQtyIngredients,\r\n  incrementQtyBun,\r\n  incrementQtyIngredient,\r\n} from \"../../services/action/burger-ingredients\";\r\nimport TemplateConstructorElement from \"../template-constructor-element/template-constructor-element\";\r\nimport { TIngredientWithUniqKey } from \"../../services/types/data\";\r\nimport { useDispatch } from \"../../services/hooks\";\r\n\r\nconst POSTIX_NAME_BUN_TOP = \"(верх)\";\r\nconst POSTIX_NAME_BUN_BUTTOM = \"(низ)\";\r\n\r\nconst ConstructorList: FC<{\r\n  ingredientList: Array<TIngredientWithUniqKey>;\r\n}> = memo(({ ingredientList }) => {\r\n  const itemsWithoutBun = useMemo(\r\n    () => ingredientList.filter((item) => item.type !== \"bun\"),\r\n    [ingredientList]\r\n  );\r\n\r\n  const [itemBun] = useMemo(\r\n    () => ingredientList.filter((item) => item.type === \"bun\"),\r\n    [ingredientList]\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const [, dropRef] = useDrop({\r\n    accept: \"ingredient\",\r\n    drop(item: TIngredientWithUniqKey) {\r\n      if (item.type === \"bun\") {\r\n        dispatch(addBunToConstructor({ ...item, uuid: uuidv4() }));\r\n        dispatch(incrementQtyBun(item));\r\n      } else {\r\n        dispatch(addIngredientToConstructor({ ...item, uuid: uuidv4() }));\r\n        dispatch(incrementQtyIngredient(item));\r\n      }\r\n    },\r\n  });\r\n\r\n  const removeItem = useCallback(\r\n    (item: TIngredientWithUniqKey) => {\r\n      dispatch(deleteItemById(item.uuid));\r\n      dispatch(decrementQtyIngredients(item));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const moveItem = useCallback(\r\n    (dragIndex, hoverIndex) => {\r\n      let elements = ingredientList;\r\n      // В стейсте у нас всегда первый элемент массива булка\r\n      // Если  булка добавлена, то мы должны сделать инкремент индексов\r\n      // Т.к. у нас единый массив хранения индегриентов,\r\n      // И если в массиве будет bun, и мы будем перетаскивать индегриенд\r\n      // То в стейте будет меняться булка и первый индегриент, вместо того, что бы поменять два индегриента между собой\r\n      // Либо использовать такой костыль, или хранить булки отдельно\r\n      if (ingredientList[0].type === \"bun\") {\r\n        dragIndex += 1;\r\n        hoverIndex += 1;\r\n      }\r\n      const dragElement = ingredientList[dragIndex];\r\n      elements.splice(dragIndex, 1);\r\n      elements.splice(hoverIndex, 0, dragElement);\r\n      dispatch(reorderIngredients(elements));\r\n    },\r\n    [ingredientList, dispatch]\r\n  );\r\n  return (\r\n    <ul className={`pt-25 ${style.burgerconstructorList}`} ref={dropRef}>\r\n      {ingredientList.length === 0 ? (\r\n        <li className={style.burgerconstructorList__item}>\r\n          <TemplateConstructorElement />\r\n        </li>\r\n      ) : null}\r\n\r\n      {itemBun && (\r\n        <li className={style.burgerconstructorList__item}>\r\n          <ConstructorElement\r\n            type=\"top\"\r\n            isLocked={true}\r\n            text={`${itemBun.name} ${POSTIX_NAME_BUN_TOP}`}\r\n            price={itemBun.price}\r\n            thumbnail={itemBun.image}\r\n          />\r\n        </li>\r\n      )}\r\n\r\n      <ul\r\n        className={`${style.burgerconstructorList__inner} ${\r\n          ingredientList.length === 0\r\n            ? style.burgerconstructorListOverflowHidden__inner\r\n            : \"\"\r\n        }`}\r\n      >\r\n        {itemsWithoutBun.map((item, index) => (\r\n          <ConstructorItem\r\n            key={item.uuid}\r\n            index={index}\r\n            moveItem={moveItem}\r\n            id={item.uuid}\r\n          >\r\n            <ConstructorElement\r\n              text={item.name}\r\n              price={item.price}\r\n              thumbnail={item.image}\r\n              handleClose={() => {\r\n                removeItem(item);\r\n              }}\r\n            />\r\n          </ConstructorItem>\r\n        ))}\r\n      </ul>\r\n      {itemBun && (\r\n        <li className={style.burgerconstructorList__item}>\r\n          <ConstructorElement\r\n            type=\"bottom\"\r\n            isLocked={true}\r\n            text={`${itemBun.name} ${POSTIX_NAME_BUN_BUTTOM}`}\r\n            price={itemBun.price}\r\n            thumbnail={itemBun.image}\r\n          />\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n});\r\n\r\nexport default ConstructorList;\r\n","import { sendOrderRequest } from \"../api\";\nimport { AppDispatch, AppThunk } from \"../types\";\nimport { TOrderSuccess } from \"../types/data\";\n\nexport const ORDER_REQUEST: \"ORDER_REQUEST\" = \"ORDER_REQUEST\";\nexport const ORDER_SUCCESS: \"ORDER_SUCCESS\" = \"ORDER_SUCCESS\";\nexport const ORDER_FAILED: \"ORDER_FAILED\" = \"ORDER_FAILED\";\n\nexport interface IReqOrder {\n  readonly type: typeof ORDER_REQUEST;\n}\n\nexport interface ISetInfoOrder {\n  readonly type: typeof ORDER_SUCCESS;\n  readonly payload: TOrderSuccess;\n}\n\nexport interface ISetReqOrderFailed {\n  readonly type: typeof ORDER_FAILED;\n}\n\nexport const reqOrder = (): IReqOrder => ({\n  type: ORDER_REQUEST,\n});\n\nexport const setInfoOrder = (payload: TOrderSuccess): ISetInfoOrder => ({\n  type: ORDER_SUCCESS,\n  payload,\n});\n\nexport const setReqOrderFailed = (): ISetReqOrderFailed => ({\n  type: ORDER_FAILED,\n});\n\nexport const sendOrderThunk: AppThunk = (idList: ReadonlyArray<string>) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(reqOrder());\n    sendOrderRequest(idList)\n      .then((res) => {\n        dispatch(setInfoOrder(res));\n      })\n      .catch((e) => {\n        console.log(e);\n        dispatch(setReqOrderFailed());\n      });\n  };\n};\n\nexport type TOrderDetailsActions =\n  | IReqOrder\n  | ISetInfoOrder\n  | ISetReqOrderFailed;\n","import styles from \"./error-text.module.css\";\nimport {FC} from 'react'\nimport { TErrorText } from \"../../services/types/data\";\n\nconst ErrorText:FC<TErrorText> =  ({ text }) =>{\n  return (\n    <div className={styles.errorText}>\n      <p className=\"text text_type_digits-medium\">{text}</p>\n    </div>\n  );\n}\n\nexport default ErrorText;\n","import {\r\n  Button,\r\n  CurrencyIcon,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport style from \"./burger-constructor.module.css\";\r\nimport OrderDetails from \"../order-details/order-details\";\r\nimport Modal from \"../modal/modal\";\r\nimport { useState, useMemo, useEffect, FC, useCallback } from \"react\";\r\nimport ConstructorList from \"../constructor-list/constructor-list\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport { sendOrderThunk } from \"../../services/action/order-details\";\r\nimport { setDefaultValueIngredients } from \"../../services/action/burger-constructor\";\r\nimport { resetQtyIngredients } from \"../../services/action/burger-ingredients\";\r\nimport ErrorText from \"../error-text/error-text\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst initialStateButton = {\r\n  text: \"Оформить заказ\",\r\n  count: 3,\r\n};\r\n\r\nconst BurgerConstructor: FC = () => {\r\n  const { ingredients } = useSelector((state) => state.burgerConstructor);\r\n  const { user } = useSelector((state) => state.userInfo);\r\n  const history = useHistory();\r\n  const { orderRequest } = useSelector((state) => state.orderInfo);\r\n  const { success } = useSelector((state) => state.orderInfo);\r\n  const [textButton, seTextButton] = useState(initialStateButton);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const total = useMemo(() => {\r\n    return ingredients.reduce((accumulator, element) => {\r\n      return element.type !== \"bun\"\r\n        ? (accumulator += element.price)\r\n        : (accumulator += element.price * 2);\r\n    }, 0);\r\n  }, [ingredients]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const idIngredientList = useSelector((state) => {\r\n    const listIngredients = state.burgerConstructor.ingredients;\r\n    const idList = listIngredients.map((item) => {\r\n      return item._id;\r\n    });\r\n\r\n    return idList;\r\n  });\r\n\r\n  const orderNumber = useSelector((state) => state.orderInfo.order.number);\r\n  const orderFailed = useSelector((state) => state.orderInfo.orderFailed);\r\n\r\n  const handlerOrder = useCallback(() => {\r\n    if (!user) {\r\n      history.push({\r\n        pathname: \"/login\",\r\n      });\r\n      return;\r\n    }\r\n    setShow(true);\r\n    dispatch(sendOrderThunk(idIngredientList));\r\n  }, [dispatch, history, idIngredientList, user]);\r\n\r\n  useEffect(() => {\r\n    let interval: ReturnType<typeof setInterval>;\r\n    if (orderRequest) {\r\n      seTextButton({\r\n        text: \"Ждите\",\r\n        count: initialStateButton.count,\r\n      });\r\n      interval = setInterval(() => {\r\n        seTextButton((prevState) => ({\r\n          count:\r\n            prevState.count === 0\r\n              ? initialStateButton.count\r\n              : prevState.count - 1,\r\n          text: prevState.count === 0 ? \"Ждите\" : prevState.text + \".\",\r\n        }));\r\n      }, 1000);\r\n    } else {\r\n      seTextButton(initialStateButton);\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [orderRequest]);\r\n\r\n  return (\r\n    <section className={`${style.burgerConstructor} pl-4 pr-4`}>\r\n      <ConstructorList ingredientList={ingredients} />\r\n      {orderFailed ? <ErrorText text={\"Ошибка при оформлении заказа\"} /> : null}\r\n      <div className={style.burgerConstructor__total}>\r\n        <p className=\"text text_type_digits-medium pr-2\">{total}</p>\r\n        <CurrencyIcon type=\"primary\" />\r\n        <div className={`${style.buttonOrder} pl-10`}>\r\n          <Button\r\n            disabled={!total || orderRequest}\r\n            onClick={handlerOrder}\r\n            type=\"primary\"\r\n            size=\"large\"\r\n          >\r\n            {textButton.text}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {success && show && (\r\n        <Modal\r\n          onClose={() => {\r\n            setShow(false);\r\n            dispatch(setDefaultValueIngredients());\r\n            dispatch(resetQtyIngredients());\r\n          }}\r\n        >\r\n          <OrderDetails order={orderNumber} />\r\n        </Modal>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BurgerConstructor;\r\n","import {\n  CurrencyIcon,\n  Counter,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { useDrag } from \"react-dnd\";\nimport styles from \"./ingredient.module.css\";\nimport { FC, memo } from \"react\";\nimport { TIngredient } from \"../../services/types/data\";\n\nconst Ingredient: FC<{ data: TIngredient }> = memo(({ data }) => {\n  const { image, name, price, qty } = data;\n\n  const [, dragRef] = useDrag({\n    type: \"ingredient\",\n    item: data,\n  });\n  return (\n    <div ref={dragRef}>\n      {qty && <Counter count={qty} size=\"default\" />}\n      <img src={image} alt={name} className=\"pl-4 pb-1 pr-4\" />\n      <div className={styles.card__prics}>\n        <p className=\"text text_type_digits-default pb-1 pr-2\">{price}</p>\n        <CurrencyIcon type=\"primary\" />\n      </div>\n      <p className=\"pt-2 text text_type_main-default\">{name}</p>\n    </div>\n  );\n});\n\nexport default Ingredient;\n","import cardStyle from \"./ingredient-list.module.css\";\nimport { forwardRef, useMemo, memo } from \"react\";\nimport Ingredient from \"../ingredient/ingredient\";\nimport { TIngredientList } from \"../../services/types/data\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst IngredientList = memo(\n  forwardRef<HTMLDivElement, TIngredientList>(\n    ({ list, typeCard, title }, ref) => {\n      const location = useLocation();\n\n      const filteredItems = useMemo(\n        () => list.filter((element) => element.type === typeCard),\n        [list, typeCard]\n      );\n\n      return (\n        <div ref={ref}>\n          <h2 className=\"text text_type_main-medium pb-6\">{title}</h2>\n          <ul className={`pl-4 pb-10 ${cardStyle.card__list}`}>\n            {filteredItems.map((item) => (\n              <Link\n                key={item._id}\n                to={{\n                  pathname: `/ingredients/${item._id}`,\n                  state: { background: location },\n                }}\n                style={{ textDecoration: \"none\", color: \"#fff\" }}\n              >\n                <li key={item._id} className={cardStyle.card__listItem}>\n                  <Ingredient data={item} />\n                </li>\n              </Link>\n            ))}\n          </ul>\n        </div>\n      );\n    }\n  )\n);\n\nexport default IngredientList;\n","import { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useState, useRef, FC, useCallback, RefObject } from \"react\";\r\nimport IngredientList from \"../ingredient-list/ingredient-list\";\r\nimport style from \"./burger-ingredients.module.css\";\r\nimport { useSelector } from \"../../services/hooks\";\r\nimport { TIngredientType } from \"../../services/types/data\";\r\n\r\nconst BurgerIngredients: FC = () => {\r\n  const [current, setCurrent] = useState<TIngredientType>(\"bun\");\r\n  const refBunDiv = useRef<HTMLDivElement>(null);\r\n  const refSauceDiv = useRef<HTMLDivElement>(null);\r\n  const refMainDiv = useRef<HTMLDivElement>(null);\r\n\r\n  const BUN: TIngredientType = \"bun\";\r\n  const SAUCE: TIngredientType = \"sauce\";\r\n  const MAIN: TIngredientType = \"main\";\r\n\r\n  const { burgerIngredients } = useSelector((state) => state.burgerIngredients);\r\n\r\n  const handleTab = useCallback(\r\n    (value: TIngredientType, element: RefObject<HTMLElement>) => {\r\n      setCurrent(value);\r\n      element?.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    },\r\n    []\r\n  );\r\n\r\n  const handlerScroll: React.EventHandler<React.UIEvent<HTMLDivElement>> =\r\n    useCallback((e: React.UIEvent<HTMLElement>) => {\r\n      if (refBunDiv.current === null || refSauceDiv.current === null) return;\r\n      const scrollTop = (e.target as HTMLElement).scrollTop;\r\n      const posOfSectionBun = refBunDiv.current.offsetTop;\r\n      const posOfSauceBun = refSauceDiv.current.offsetTop;\r\n      if (scrollTop + 40 <= posOfSectionBun) {\r\n        setCurrent(BUN);\r\n      } else if (scrollTop - 170 <= posOfSauceBun) {\r\n        setCurrent(SAUCE);\r\n      } else {\r\n        setCurrent(MAIN);\r\n      }\r\n    }, []);\r\n\r\n  return (\r\n    <section>\r\n      <h1 className=\"text text_type_main-large pt-10 pb-5\">Соберите бургер</h1>\r\n      <div style={{ display: \"flex\" }}>\r\n        <Tab\r\n          value={BUN}\r\n          active={current === BUN}\r\n          onClick={() => {\r\n            handleTab(BUN, refBunDiv);\r\n          }}\r\n        >\r\n          Булки\r\n        </Tab>\r\n        <Tab\r\n          value={SAUCE}\r\n          active={current === SAUCE}\r\n          onClick={() => {\r\n            handleTab(SAUCE, refSauceDiv);\r\n          }}\r\n        >\r\n          Соусы\r\n        </Tab>\r\n        <Tab\r\n          value={MAIN}\r\n          active={current === MAIN}\r\n          onClick={() => {\r\n            handleTab(MAIN, refMainDiv);\r\n          }}\r\n        >\r\n          Начинки\r\n        </Tab>\r\n      </div>\r\n      <div\r\n        className={`${style.burgerIngredients} mt-10`}\r\n        onScroll={handlerScroll}\r\n      >\r\n        <IngredientList\r\n          list={burgerIngredients}\r\n          typeCard=\"bun\"\r\n          title=\"Булки\"\r\n          ref={refBunDiv}\r\n        />\r\n        <IngredientList\r\n          list={burgerIngredients}\r\n          typeCard=\"sauce\"\r\n          title=\"Соусы\"\r\n          ref={refSauceDiv}\r\n        />\r\n        <IngredientList\r\n          list={burgerIngredients}\r\n          typeCard=\"main\"\r\n          title=\"Начинки\"\r\n          ref={refMainDiv}\r\n        />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","import { FC } from \"react\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport {  useSelector } from \"../../services/hooks\";\r\nimport BurgerConstructor from \"../../components/burger-constructor/burger-constructor\";\r\nimport BurgerIngredients from \"../../components/burger-ingredients/burger-ingredients\";\r\nimport ErrorText from \"../../components/error-text/error-text\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport styles from \"./home.module.css\";\r\n\r\nconst HomePage: FC = () => {\r\n  const { burgerIngredientsFailed } = useSelector(\r\n    (state) => state.burgerIngredients\r\n  );\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      <DndProvider backend={HTML5Backend}>\r\n        {burgerIngredientsFailed !== true ? (\r\n          <>\r\n            <BurgerIngredients />\r\n            <BurgerConstructor />\r\n          </>\r\n        ) : (\r\n          <ErrorText text={\"Что-то пошло не так\"} />\r\n        )}\r\n      </DndProvider>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import {\n  confirmResetPassRequest,\n  getProfileRequest,\n  loginRequest,\n  logoutRequest,\n  refreshTokenAndFetchRetry,\n  refreshTokenRequest,\n  registerRequest,\n  resetPasswordRequest,\n  updateProfileRequest,\n} from \"../api\";\nimport { ACCESS_TOKEN, JWT_EXPIRED, REFRESH_TOKEN } from \"../constant\";\nimport { AppDispatch, AppThunk } from \"../types\";\nimport {\n  TConfirmResetPassRQ,\n  TConfirmResetPassResponse,\n  TGetCodeForResetPassRQ,\n  TGetCodeForResetPassResponse,\n  TProfileResponse,\n  TLoginResponse,\n  TLogoutResponse,\n  TRefreshTokenResponse,\n  TRegisterRequest,\n  TRegisterResponse,\n  TUpdateProfileRq,\n} from \"../types/data\";\nimport { deleteCookie, setCookie } from \"../utils\";\n\nexport const REGISTER_REQUEST: \"REGISTER_REQUEST\" = \"REGISTER_REQUEST\";\nexport const REGISTER_REQUEST_SUCCESS: \"REGISTER_REQUEST_SUCCESS\" =\n  \"REGISTER_REQUEST_SUCCESS\";\nexport const REGISTER_REQUEST_FAILED: \"REGISTER_REQUEST_FAILED\" =\n  \"REGISTER_REQUEST_FAILED\";\nexport const GET_CODE_RESET_PASSWORD_REQUEST: \"GET_CODE_RESET_PASSWORD_REQUEST\" =\n  \"GET_CODE_RESET_PASSWORD_REQUEST\";\nexport const GET_CODE_RESET_PASSWORD_SUCCESS: \"GET_CODE_RESET_PASSWORD_SUCCESS\" =\n  \"GET_CODE_RESET_PASSWORD_SUCCESS\";\nexport const GET_CODE_RESET_PASSWORD_FAILED: \"GET_CODE_RESET_PASSWORD_FAILED\" =\n  \"GET_CODE_RESET_PASSWORD_FAILED\";\nexport const CONFIRM_RESET_PASSWORD_REQUEST: \"CONFIRM_RESET_PASSWORD_REQUEST\" =\n  \"CONFIRM_RESET_PASSWORD_REQUEST\";\nexport const CONFIRM_RESET_PASSWORD_SUCCESS: \"CONFIRM_RESET_PASSWORD_SUCCESS\" =\n  \"CONFIRM_RESET_PASSWORD_SUCCESS\";\nexport const CONFIRM_RESET_PASSWORD_FAILED: \"CONFIRM_RESET_PASSWORD_FAILED\" =\n  \"CONFIRM_RESET_PASSWORD_FAILED\";\n\nexport const REFRESH_TOKEN_REQUEST: \"REFRESH_TOKEN_REQUEST\" =\n  \"REFRESH_TOKEN_REQUEST\";\nexport const REFRESH_TOKEN_REQUEST_FAILED: \"REFRESH_TOKEN_REQUEST_FAILED\" =\n  \"REFRESH_TOKEN_REQUEST_FAILED\";\nexport const REFRESH_TOKEN_REQUEST_SUCCESS: \"REFRESH_TOKEN_REQUEST_SUCCESS\" =\n  \"REFRESH_TOKEN_REQUEST_SUCCESS\";\n\nexport const LOGIN_REQUEST: \"LOGIN_REQUEST\" = \"LOGIN_REQUEST\";\nexport const LOGIN_REQUEST_FAILED: \"LOGIN_REQUEST_FAILED\" =\n  \"LOGIN_REQUEST_FAILED\";\nexport const LOGIN_REQUEST_SUCCESS: \"LOGIN_REQUEST_SUCCESS\" =\n  \"LOGIN_REQUEST_SUCCESS\";\n\nexport const LOGOUT_REQUEST: \"LOGOUT_REQUEST\" = \"LOGOUT_REQUEST\";\nexport const LOGOUT_REQUEST_FAILED: \"LOGOUT_REQUEST_FAILED\" =\n  \"LOGOUT_REQUEST_FAILED\";\nexport const LOGOUT_REQUEST_SUCCESS: \"LOGOUT_REQUEST_SUCCESS\" =\n  \"LOGOUT_REQUEST_SUCCESS\";\n\nexport const GET_PROFILE_REQUEST: \"GET_PROFILE_REQUEST\" = \"GET_PROFILE_REQUEST\";\nexport const GET_PROFILE_REQUEST_FAILED: \"GET_PROFILE_REQUEST_FAILED\" =\n  \"GET_PROFILE_REQUEST_FAILED\";\nexport const GET_PROFILE_REQUEST_SUCCESS: \"GET_PROFILE_REQUEST_SUCCESS\" =\n  \"GET_PROFILE_REQUEST_SUCCESS\";\n\nexport const UPDATE_PROFILE_REQUEST: \"UPDATE_PROFILE_REQUEST\" =\n  \"UPDATE_PROFILE_REQUEST\";\nexport const UPDATE_PROFILE_REQUEST_FAILED: \"UPDATE_PROFILE_REQUEST_FAILED\" =\n  \"UPDATE_PROFILE_REQUEST_FAILED\";\nexport const UPDATE_PROFILE_REQUEST_SUCCESS: \"UPDATE_PROFILE_REQUEST_SUCCESS\" =\n  \"UPDATE_PROFILE_REQUEST_SUCCESS\";\n\n/*\n  Register \n*/\nexport interface IRegisterAction {\n  readonly type: typeof REGISTER_REQUEST;\n}\n\nexport interface IRegisterFailedAction {\n  readonly type: typeof REGISTER_REQUEST_FAILED;\n}\n\nexport interface IRegisterSuccessAction {\n  readonly type: typeof REGISTER_REQUEST_SUCCESS;\n  readonly payload: TRegisterResponse;\n}\n\nexport const sendRqRegister = (): IRegisterAction => ({\n  type: REGISTER_REQUEST,\n});\n\nexport const registerFailed = (): IRegisterFailedAction => ({\n  type: REGISTER_REQUEST_FAILED,\n});\n\nexport const setUserInfo = (\n  payload: TRegisterResponse\n): IRegisterSuccessAction => ({\n  type: REGISTER_REQUEST_SUCCESS,\n  payload,\n});\n\n/*\n  GetCodeForResetPass\n*/\nexport interface IGetCodeResetPassAction {\n  readonly type: typeof GET_CODE_RESET_PASSWORD_REQUEST;\n}\n\nexport interface IGetCodeResetPassFailedAction {\n  readonly type: typeof GET_CODE_RESET_PASSWORD_FAILED;\n}\n\nexport interface IGetCodeResetPassSuccessAction {\n  readonly type: typeof GET_CODE_RESET_PASSWORD_SUCCESS;\n  readonly payload: TGetCodeForResetPassResponse;\n}\n\nexport const sendRqGetCodeForResetPass = (): IGetCodeResetPassAction => ({\n  type: GET_CODE_RESET_PASSWORD_REQUEST,\n});\n\nexport const getCodeForResetPassFailed = (): IGetCodeResetPassFailedAction => ({\n  type: GET_CODE_RESET_PASSWORD_FAILED,\n});\n\nexport const setResGetCodeForResetPass = (\n  payload: TGetCodeForResetPassResponse\n): IGetCodeResetPassSuccessAction => ({\n  type: GET_CODE_RESET_PASSWORD_SUCCESS,\n  payload,\n});\n\n/*\n  ConfirmResetPass  \n*/\nexport interface IConfirmResetAction {\n  readonly type: typeof CONFIRM_RESET_PASSWORD_REQUEST;\n}\n\nexport interface IConfirmResetPassActionFailed {\n  readonly type: typeof CONFIRM_RESET_PASSWORD_FAILED;\n}\n\nexport interface IConfirmResetPassActionSuccess {\n  readonly type: typeof CONFIRM_RESET_PASSWORD_SUCCESS;\n  readonly payload: TConfirmResetPassResponse;\n}\n\nexport const confirmResetPassRq = (): IConfirmResetAction => ({\n  type: CONFIRM_RESET_PASSWORD_REQUEST,\n});\n\nexport const confirmResetPassFailed = (): IConfirmResetPassActionFailed => ({\n  type: CONFIRM_RESET_PASSWORD_FAILED,\n});\n\nexport const setResConfirmResetPass = (\n  payload: TConfirmResetPassResponse\n): IConfirmResetPassActionSuccess => ({\n  type: CONFIRM_RESET_PASSWORD_SUCCESS,\n  payload,\n});\n\n/*\n  refreshToken\n*/\nexport interface IRefreshAction {\n  readonly type: typeof REFRESH_TOKEN_REQUEST;\n}\n\nexport interface IRefreshFailedAction {\n  readonly type: typeof REFRESH_TOKEN_REQUEST_FAILED;\n}\n\nexport interface IRefreshSuccessAction {\n  readonly type: typeof REFRESH_TOKEN_REQUEST_SUCCESS;\n  readonly payload: TRefreshTokenResponse;\n}\n\nexport const refreshTokenAction = (): IRefreshAction => ({\n  type: REFRESH_TOKEN_REQUEST,\n});\n\nexport const refreshTokenFailedAction = (): IRefreshFailedAction => ({\n  type: REFRESH_TOKEN_REQUEST_FAILED,\n});\n\nexport const refreshTokenSuccessAction = (\n  payload: TRefreshTokenResponse\n): IRefreshSuccessAction => ({\n  type: REFRESH_TOKEN_REQUEST_SUCCESS,\n  payload,\n});\n\n/*\n  Login\n*/\nexport interface ILoginAction {\n  readonly type: typeof LOGIN_REQUEST;\n}\n\nexport interface ILoginFailedAction {\n  readonly type: typeof LOGIN_REQUEST_FAILED;\n}\n\nexport interface ILoginSuccessAction {\n  readonly type: typeof LOGIN_REQUEST_SUCCESS;\n  readonly payload: TLoginResponse;\n}\n\nexport const loginAction = (): ILoginAction => ({\n  type: LOGIN_REQUEST,\n});\n\nexport const loginFailedAction = (): ILoginFailedAction => ({\n  type: LOGIN_REQUEST_FAILED,\n});\n\nexport const loginSuccessAction = (\n  payload: TLoginResponse\n): ILoginSuccessAction => ({\n  type: LOGIN_REQUEST_SUCCESS,\n  payload,\n});\n\n/*\n  Logout\n*/\nexport interface ILogoutAction {\n  readonly type: typeof LOGOUT_REQUEST;\n}\n\nexport interface ILogoutFailedAction {\n  readonly type: typeof LOGOUT_REQUEST_FAILED;\n}\n\nexport interface ILogoutSuccessAction {\n  readonly type: typeof LOGOUT_REQUEST_SUCCESS;\n  readonly payload: TLogoutResponse;\n}\n\nexport const logoutAction = (): ILogoutAction => ({\n  type: LOGOUT_REQUEST,\n});\n\nexport const logoutFailedAction = (): ILogoutFailedAction => ({\n  type: LOGOUT_REQUEST_FAILED,\n});\n\nexport const logoutSuccessAction = (\n  payload: TLogoutResponse\n): ILogoutSuccessAction => ({\n  type: LOGOUT_REQUEST_SUCCESS,\n  payload,\n});\n\n/*\n  Profile\n*/\nexport interface IGetProfileAction {\n  readonly type: typeof GET_PROFILE_REQUEST;\n}\n\nexport interface IGetProfileFailedAction {\n  readonly type: typeof GET_PROFILE_REQUEST_FAILED;\n}\n\nexport interface IGetProfileSuccessAction {\n  readonly type: typeof GET_PROFILE_REQUEST_SUCCESS;\n  readonly payload: TProfileResponse;\n}\n\nexport const getProfileAction = (): IGetProfileAction => ({\n  type: GET_PROFILE_REQUEST,\n});\n\nexport const getProfileFailedAction = (): IGetProfileFailedAction => ({\n  type: GET_PROFILE_REQUEST_FAILED,\n});\n\nexport const getProfileSuccessAction = (\n  payload: TProfileResponse\n): IGetProfileSuccessAction => ({\n  type: GET_PROFILE_REQUEST_SUCCESS,\n  payload,\n});\n\n/*\n  Update Profile\n*/\nexport interface IUpdateProfileAction {\n  readonly type: typeof UPDATE_PROFILE_REQUEST;\n}\n\nexport interface IUpdateProfileFailedAction {\n  readonly type: typeof UPDATE_PROFILE_REQUEST_FAILED;\n}\n\nexport interface IUpdateProfileSuccessAction {\n  readonly type: typeof UPDATE_PROFILE_REQUEST_SUCCESS;\n  readonly payload: TProfileResponse;\n}\n\nexport const updateProfileAction = (): IUpdateProfileAction => ({\n  type: UPDATE_PROFILE_REQUEST,\n});\n\nexport const updateProfileFailedAction = (): IUpdateProfileFailedAction => ({\n  type: UPDATE_PROFILE_REQUEST_FAILED,\n});\n\nexport const updateProfileSuccessAction = (\n  payload: TProfileResponse\n): IUpdateProfileSuccessAction => ({\n  type: UPDATE_PROFILE_REQUEST_SUCCESS,\n  payload,\n});\n\nexport const registerThunk: AppThunk = (data: TRegisterRequest) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(sendRqRegister());\n    registerRequest(data)\n      .then((res) => {\n        dispatch(setUserInfo(res));\n        if (res.accessToken) {\n          setCookie(ACCESS_TOKEN, res.accessToken.split(\"Bearer \")[1]);\n        }\n        if (res.refreshToken) {\n          setCookie(REFRESH_TOKEN, res.refreshToken);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n        dispatch(registerFailed());\n      });\n  };\n};\n\nexport const loginThunk: AppThunk = (data: {\n  email: string;\n  password: string;\n}) => {\n  return async function (dispatch: AppDispatch) {\n    dispatch(loginAction());\n    await loginRequest(data)\n      .then((res) => {\n        dispatch(loginSuccessAction(res));\n        if (res.accessToken) {\n          setCookie(ACCESS_TOKEN, res.accessToken.split(\"Bearer \")[1]);\n        }\n        if (res.refreshToken) {\n          setCookie(REFRESH_TOKEN, res.refreshToken);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n        dispatch(loginFailedAction());\n      });\n  };\n};\n\nexport const resetPasswordThunk: AppThunk = (data: TGetCodeForResetPassRQ) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(sendRqGetCodeForResetPass());\n    resetPasswordRequest(data)\n      .then((res) => {\n        dispatch(setResGetCodeForResetPass(res));\n      })\n      .catch((e) => {\n        console.log(e);\n        dispatch(getCodeForResetPassFailed());\n      });\n  };\n};\n\nexport const refreshTokenThunk: AppThunk = (data: { token: string }) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(refreshTokenAction());\n    refreshTokenRequest(data)\n      .then((res) => {\n        dispatch(refreshTokenSuccessAction(res));\n        if (res.accessToken) {\n          setCookie(ACCESS_TOKEN, res.accessToken.split(\"Bearer \")[1]);\n        }\n        if (res.refreshToken) {\n          setCookie(REFRESH_TOKEN, res.refreshToken);\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n        dispatch(refreshTokenFailedAction());\n      });\n  };\n};\n\nexport const confirmResetPassThunk: AppThunk = (\n  data: TConfirmResetPassRQ,\n  afterLogout?: Function\n) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(confirmResetPassRq());\n    confirmResetPassRequest(data)\n      .then((res) => {\n        dispatch(setResConfirmResetPass(res));\n        if (afterLogout) {\n          afterLogout();\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n        dispatch(confirmResetPassFailed());\n      });\n  };\n};\n\nexport const getProfileThunk: AppThunk =\n  () => async (dispatch: AppDispatch) => {\n    dispatch(getProfileAction());\n    try {\n      const json = await getProfileRequest();\n      dispatch(getProfileSuccessAction(json));\n      return json;\n    } catch (err: any) {\n      if (err.status === 403 && err.message === JWT_EXPIRED) {\n        try {\n          const json = await refreshTokenAndFetchRetry(getProfileRequest);\n          dispatch(getProfileSuccessAction(json));\n        } catch (err: any) {\n          dispatch(getProfileFailedAction());\n        }\n      } else {\n        dispatch(getProfileFailedAction());\n      }\n    }\n  };\n\nexport const updateProfileThunk: AppThunk = (data: TUpdateProfileRq) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(updateProfileAction());\n    updateProfileRequest(data)\n      .then((res) => {\n        dispatch(updateProfileSuccessAction(res));\n      })\n      .catch((e) => {\n        console.log(e);\n        dispatch(updateProfileFailedAction());\n      });\n  };\n};\n\nexport const logoutThunk: AppThunk = (data: {\n  token: string;\n  afterLogout?: Function;\n}) => {\n  return function (dispatch: AppDispatch) {\n    dispatch(logoutAction());\n    logoutRequest(data)\n      .then((res) => {\n        dispatch(logoutSuccessAction(res));\n        deleteCookie(ACCESS_TOKEN);\n        deleteCookie(REFRESH_TOKEN);\n        if (data.afterLogout) {\n          data.afterLogout();\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n        dispatch(logoutFailedAction());\n      });\n  };\n};\n\nexport type TUserActions =\n  | IRegisterAction\n  | IRegisterFailedAction\n  | IRegisterSuccessAction\n  | IGetCodeResetPassAction\n  | IGetCodeResetPassSuccessAction\n  | IGetCodeResetPassFailedAction\n  | IConfirmResetAction\n  | IConfirmResetPassActionFailed\n  | IConfirmResetPassActionSuccess\n  | IRefreshAction\n  | IRefreshFailedAction\n  | IRefreshSuccessAction\n  | ILoginAction\n  | ILoginFailedAction\n  | ILoginSuccessAction\n  | IGetProfileAction\n  | IGetProfileFailedAction\n  | IGetProfileSuccessAction\n  | ILogoutAction\n  | ILogoutFailedAction\n  | ILogoutSuccessAction\n  | IUpdateProfileAction\n  | IUpdateProfileFailedAction\n  | IUpdateProfileSuccessAction;\n","import {\r\n  Button,\r\n  EmailInput,\r\n  PasswordInput,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { FC, useCallback, useState } from \"react\";\r\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\r\nimport { loginThunk } from \"../../services/action/user\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport styles from \"./login.module.css\";\r\nimport { Location } from \"history\";\r\n\r\nconst LoginPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((store) => store.userInfo.user);\r\n  const location = useLocation<Location & { from: Location }>();\r\n\r\n  const [state, setState] = useState({ email: \"\", password: \"\" });\r\n\r\n  const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  }, []);\r\n\r\n  if (user) {\r\n    return <Redirect to={location.state?.from || \"/\"} />;\r\n  }\r\n\r\n  return (\r\n    <main className={styles.login}>\r\n      <h2 className=\"text text_type_main-medium pb-6\">Вход</h2>\r\n      <form\r\n        className={styles.form}\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          dispatch(loginThunk(state));\r\n        }}\r\n      >\r\n        <fieldset className=\"fieldset\">\r\n          <EmailInput\r\n            onChange={handleChange}\r\n            value={state.email}\r\n            name={\"email\"}\r\n          />\r\n          <PasswordInput\r\n            onChange={handleChange}\r\n            value={state.password}\r\n            name={\"password\"}\r\n          />\r\n          <div className=\"button pb-20\">\r\n            <Button type=\"primary\" size=\"medium\" htmlType=\"submit\">\r\n              Войти\r\n            </Button>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n      <ul className=\"registrationNav\">\r\n        <li className=\"registrationNav__item\">\r\n          <p className=\"text text_type_main-default\">\r\n            Вы — новый пользователь?\r\n          </p>\r\n          <Link className=\"link\" to=\"/register\">\r\n            Зарегистрироваться\r\n          </Link>\r\n        </li>\r\n        <li className=\"registrationNav__item\">\r\n          <p className=\"text text_type_main-default\">Забыли пароль?</p>\r\n          <Link className=\"link\" to=\"/forgot-password\">\r\n            Восстановить пароль\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import { FC, useCallback, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport styles from \"./register.module.css\";\r\nimport {\r\n  Button,\r\n  EmailInput,\r\n  PasswordInput,\r\n  Input,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport { registerThunk } from \"../../services/action/user\";\r\n\r\nconst RegisterPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { request } = useSelector((state) => state.userInfo.registerInfo);\r\n  const user = useSelector((state) => state.userInfo.user);\r\n\r\n  const [state, setState] = useState({ email: \"\", name: \"\", password: \"\" });\r\n\r\n  const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  }, []);\r\n\r\n  if (user) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className={styles.register}>\r\n      <h2 className=\"text text_type_main-medium pb-6\">Регистрация</h2>\r\n      <form\r\n        className={styles.form}\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          dispatch(registerThunk(state));\r\n          setState({ email: \"\", name: \"\", password: \"\" });\r\n        }}\r\n      >\r\n        <fieldset className=\"fieldset\">\r\n          <Input\r\n            type={\"text\"}\r\n            placeholder={\"Имя\"}\r\n            onChange={handleChange}\r\n            value={state.name}\r\n            name={\"name\"}\r\n          />\r\n          <EmailInput\r\n            onChange={handleChange}\r\n            value={state.email}\r\n            name={\"email\"}\r\n          />\r\n          <PasswordInput\r\n            onChange={handleChange}\r\n            value={state.password}\r\n            name={\"password\"}\r\n          />\r\n          <div className=\"button pb-20\">\r\n            <Button type=\"primary\" size=\"medium\">\r\n              {!request ? \"Зарегистрироваться\" : \"Регистрация...\"}\r\n            </Button>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n      <ul className=\"registrationNav\">\r\n        <li className=\"registrationNav__item\">\r\n          <p className=\"text text_type_main-default\">Уже зарегистрированы?</p>\r\n          <Link className=\"link\" to=\"/login\">\r\n            Войти\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import { FC, useCallback, useState } from \"react\";\r\nimport { Link, Redirect, useHistory, useLocation } from \"react-router-dom\";\r\nimport styles from \"./forgot-password.module.css\";\r\nimport {\r\n  Button,\r\n  Input,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport { resetPasswordThunk } from \"../../services/action/user\";\r\n\r\nconst ForgotPasswordPage: FC = () => {\r\n  const user = useSelector((store) => store.userInfo.user);\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [state, setState] = useState({\r\n    email: \"\",\r\n  });\r\n  const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  }, []);\r\n\r\n  if (user) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className={styles.forgotPassword}>\r\n      <h2 className=\"text text_type_main-medium pb-6\">Восстановление пароля</h2>\r\n      <form\r\n        className={styles.form}\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          dispatch(resetPasswordThunk(state));\r\n          history.replace({\r\n            pathname: \"/reset-password\",\r\n            state: { from: location },\r\n          });\r\n        }}\r\n      >\r\n        <fieldset className=\"fieldset\">\r\n          <Input\r\n            type=\"email\"\r\n            value={state.email}\r\n            name=\"email\"\r\n            onChange={handleChange}\r\n            placeholder={\"Укажите e-mail\"}\r\n          />\r\n          <div className=\"button pb-20\">\r\n            <Button type=\"primary\" size=\"medium\" htmlType=\"submit\">\r\n              Восстановить\r\n            </Button>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n      <ul className=\"registrationNav\">\r\n        <li className=\"registrationNav__item\">\r\n          <p className=\"text text_type_main-default\">Вспомнили пароль?</p>\r\n          <Link className=\"link\" to=\"/login\">\r\n            Войти\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordPage;\r\n","import { FC, useCallback, useState } from \"react\";\r\nimport { Link, Redirect, useHistory, useLocation } from \"react-router-dom\";\r\nimport styles from \"./reset-password.module.css\";\r\nimport {\r\n  Button,\r\n  Input,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { confirmResetPassThunk } from \"../../services/action/user\";\r\nimport { useSelector, useDispatch } from \"../../services/hooks\";\r\nimport { Location } from \"history\";\r\n\r\nconst ResetPasswordPage: FC = () => {\r\n  const user = useSelector((store) => store.userInfo.user);\r\n  const dispatch = useDispatch();\r\n  const location = useLocation<{\r\n    from: Location;\r\n  }>();\r\n  const history = useHistory();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const [state, setState] = useState({\r\n    password: \"\",\r\n    token: \"\",\r\n  });\r\n\r\n  const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  }, []);\r\n\r\n  if (!location.state?.from) {\r\n    return <Redirect to=\"/forgot-password\" />;\r\n  }\r\n\r\n  if (user) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/\",\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <main className={styles.resetPassword}>\r\n      <h2 className=\"text text_type_main-medium pb-6\">Восстановление пароля</h2>\r\n      <form\r\n        className={styles.form}\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          dispatch(\r\n            confirmResetPassThunk(state, () => {\r\n              history.replace({ pathname: \"/login\" });\r\n            })\r\n          );\r\n        }}\r\n      >\r\n        <fieldset className=\"fieldset\">\r\n          <Input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            name=\"password\"\r\n            value={state.password}\r\n            onChange={handleChange}\r\n            placeholder={\"Введите новый пароль\"}\r\n            icon={\"ShowIcon\"}\r\n            onIconClick={() => {\r\n              setShowPassword((preValue) => !preValue);\r\n            }}\r\n          />\r\n          <Input\r\n            type={\"text\"}\r\n            name=\"token\"\r\n            value={state.token}\r\n            onChange={handleChange}\r\n            placeholder={\"Введите код из письма\"}\r\n          />\r\n          <div className=\"button pb-20\">\r\n            <Button type=\"primary\" size=\"medium\" htmlType=\"submit\">\r\n              Сохранить\r\n            </Button>\r\n          </div>\r\n        </fieldset>\r\n      </form>\r\n      <ul className=\"registrationNav\">\r\n        <li className=\"registrationNav__item\">\r\n          <p className=\"text text_type_main-default\">Вспомнили пароль?</p>\r\n          <Link className=\"link\" to=\"/login\">\r\n            Войти\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordPage;\r\n","import { NavLink, useHistory } from \"react-router-dom\";\r\nimport styles from \"./sidebar-menu.module.css\";\r\nimport { FC, useCallback } from \"react\";\r\nimport { getCookie } from \"../../services/utils\";\r\nimport { REFRESH_TOKEN } from \"../../services/constant\";\r\nimport { useDispatch } from \"../../services/hooks\";\r\nimport { logoutThunk } from \"../../services/action/user\";\r\n\r\nconst setStyleActiveLink = (isActive: boolean) => {\r\n  return !isActive ? styles.link : styles.link__active + \" \" + styles.link;\r\n};\r\n\r\nconst SidebarMenu: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const onClickLogoutLink = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      dispatch(\r\n        logoutThunk(getCookie(REFRESH_TOKEN), () => {\r\n          history.replace({ pathname: \"/login\" });\r\n        })\r\n      );\r\n    },\r\n    [dispatch, history]\r\n  );\r\n\r\n  return (\r\n    <ul className={`${styles.sidebarMenu}`}>\r\n      <li className={styles.sidebarMenu__item}>\r\n        <NavLink exact className={setStyleActiveLink} to=\"/profile\">\r\n          Профиль\r\n        </NavLink>\r\n      </li>\r\n      <li className={styles.sidebarMenu__item}>\r\n        <NavLink exact className={setStyleActiveLink} to=\"/profile/orders\">\r\n          История заказов\r\n        </NavLink>\r\n      </li>\r\n      <li className={styles.sidebarMenu__item}>\r\n        <NavLink\r\n          exact\r\n          className={setStyleActiveLink}\r\n          to=\"/logout\"\r\n          onClick={onClickLogoutLink}\r\n        >\r\n          Выход\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SidebarMenu;\r\n","import { FC, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport styles from \"./profile.module.css\";\r\nimport {\r\n  Button,\r\n  Input,\r\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport SidebarMenu from \"../../components/sidebar-menu/sidebar-menu\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport { updateProfileThunk } from \"../../services/action/user\";\r\n\r\nconst ProfilePage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const inputEmailRef = useRef<HTMLInputElement>(null);\r\n  const inputPassRef = useRef<HTMLInputElement>(null);\r\n  const inputNameRef = useRef<HTMLInputElement>(null);\r\n\r\n  const emailValue = useSelector((store) => store.userInfo.user?.email) || \"\";\r\n  const nameValue = useSelector((store) => store.userInfo.user?.name) || \"\";\r\n\r\n  const [state, setState] = useState({\r\n    email: {\r\n      value: emailValue,\r\n      disabled: true,\r\n    },\r\n    name: {\r\n      value: nameValue,\r\n      disabled: true,\r\n    },\r\n    password: {\r\n      value: \"\",\r\n      disabled: true,\r\n    },\r\n  });\r\n\r\n  const stateRef = useRef(state);\r\n  stateRef.current = state;\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      email: {\r\n        value: emailValue,\r\n        disabled: true,\r\n      },\r\n      name: {\r\n        value: nameValue,\r\n        disabled: true,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        disabled: true,\r\n      },\r\n    });\r\n  }, [emailValue, nameValue]);\r\n\r\n  const isFormChanged =\r\n    emailValue !== state.email.value ||\r\n    nameValue !== state.name.value ||\r\n    !!state.password.value;\r\n\r\n  const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n    const name = e.target.name as keyof typeof state;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: {\r\n        ...prevState[name],\r\n        value,\r\n      },\r\n    }));\r\n  }, []);\r\n\r\n  const handleIconClick = useCallback((nameInput: keyof typeof state) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [nameInput]: {\r\n        ...prevState[nameInput],\r\n        disabled: !prevState[nameInput].disabled,\r\n      },\r\n    }));\r\n  }, []);\r\n\r\n  const onBlur = useCallback((nameInput: keyof typeof state) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [nameInput]: {\r\n        ...prevState[nameInput],\r\n        disabled: true,\r\n      },\r\n    }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!state.name.disabled) inputNameRef.current?.focus();\r\n    if (!state.email.disabled) inputEmailRef.current?.focus();\r\n    if (!state.password.disabled) inputPassRef.current?.focus();\r\n  }, [state]);\r\n\r\n  const handleUpdateProfile = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      dispatch(\r\n        updateProfileThunk({\r\n          email: stateRef.current.email.value,\r\n          password: stateRef.current.password.value,\r\n          name: stateRef.current.name.value,\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleCancelChange = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      setState({\r\n        email: {\r\n          value: emailValue,\r\n          disabled: true,\r\n        },\r\n        name: {\r\n          value: nameValue,\r\n          disabled: true,\r\n        },\r\n        password: {\r\n          value: \"\",\r\n          disabled: true,\r\n        },\r\n      });\r\n    },\r\n    [emailValue, nameValue]\r\n  );\r\n\r\n  return (\r\n    <main className={styles.profile}>\r\n      <div className={styles.profile__container}>\r\n        <div className={styles.profile__wrapper}>\r\n          <div className=\"sidebarLeft\">\r\n            <div className=\"sidebarLeft__wrapper pb-20\">\r\n              <SidebarMenu />\r\n            </div>\r\n            <p className=\"text text_type_main-default text_color_inactive aboutPage\">\r\n              В этом разделе вы можете изменить свои персональные данные\r\n            </p>\r\n          </div>\r\n\r\n          <form className={`${styles.form} ${styles.profileForm}`} onSubmit={handleUpdateProfile}>\r\n            <fieldset className=\"fieldset\">\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={state.name.value}\r\n                onChange={handleChange}\r\n                placeholder={\"Имя\"}\r\n                icon={\"EditIcon\"}\r\n                disabled={state.name.disabled}\r\n                onIconClick={() => {\r\n                  handleIconClick(\"name\");\r\n                }}\r\n                ref={inputNameRef}\r\n                onBlur={() => {\r\n                  onBlur(\"name\");\r\n                }}\r\n              />\r\n              <Input\r\n                type=\"text\"\r\n                name=\"email\"\r\n                value={state.email.value}\r\n                onChange={handleChange}\r\n                placeholder={\"Логин\"}\r\n                icon={\"EditIcon\"}\r\n                disabled={state.email.disabled}\r\n                onIconClick={() => {\r\n                  handleIconClick(\"email\");\r\n                }}\r\n                ref={inputEmailRef}\r\n                onBlur={() => {\r\n                  onBlur(\"email\");\r\n                }}\r\n              />\r\n              <Input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={state.password.value}\r\n                onChange={handleChange}\r\n                placeholder={\"Пароль\"}\r\n                icon={\"EditIcon\"}\r\n                disabled={state.password.disabled}\r\n                onIconClick={() => {\r\n                  handleIconClick(\"password\");\r\n                }}\r\n                ref={inputPassRef}\r\n                onBlur={() => {\r\n                  onBlur(\"password\");\r\n                }}\r\n              />\r\n              {isFormChanged && (\r\n                <div className=\"button button__group\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    size=\"medium\"\r\n                    htmlType=\"reset\"\r\n                    onClick={handleCancelChange}\r\n                  >\r\n                    Отменить\r\n                  </Button>\r\n                  <Button type=\"primary\" size=\"medium\" htmlType=\"submit\">\r\n                    Сохранить\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import { Redirect, Route } from \"react-router-dom\";\nimport { FC } from \"react\";\nimport { RouteProps } from \"react-router\";\n\nexport const ProtectedRoute: FC<\n  RouteProps & { user: { email: string; name: string } | null } & {\n    isUserLoaded: boolean;\n  }\n> = ({ children, user, isUserLoaded, ...rest }) => {\n  if (!isUserLoaded) {\n    return null;\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n","import style from \"./ingredient-details.module.css\";\nimport { FC } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector } from \"../../services/hooks\";\n\nconst IngredientDetails: FC = () => {\n  const {id} = useParams<{id :string}>();\n  const ingredientInfo = useSelector((state) => {\n    return state.burgerIngredients.burgerIngredients.find((element) => {\n      return element._id === id;\n    });\n  });\n\n  return (\n    <div className={style.ingredientDetails}>\n      <img\n        className=\"pb-6\"\n        src={ingredientInfo?.image_large}\n        alt={ingredientInfo?.name}\n      />\n      <p className=\"text text_type_main-medium pb-8\">{ingredientInfo?.name}</p>\n      <ul className={style.ingredientDetails__nutritionalValue}>\n        <li className={style.ingredientDetails__nutritionaValueItem}>\n          <p\n            className={`text text_type_main-default ${style.ingredientDetails__nutritionaName}`}\n          >\n            Калории,ккал\n          </p>\n          <p\n            className={`${style.ingredientDetails__nutritionaCount} text text_type_digits-default `}\n          >\n            {ingredientInfo?.calories}\n          </p>\n        </li>\n        <li className={style.ingredientDetails__nutritionaValueItem}>\n          <p\n            className={`text text_type_main-default ${style.ingredientDetails__nutritionaName}`}\n          >\n            Белки, г\n          </p>\n          <p\n            className={`${style.ingredientDetails__nutritionaCount} text text_type_digits-default `}\n          >\n            {ingredientInfo?.proteins}\n          </p>\n        </li>\n        <li className={style.ingredientDetails__nutritionaValueItem}>\n          <p\n            className={`text text_type_main-default ${style.ingredientDetails__nutritionaName}`}\n          >\n            Жиры, г\n          </p>\n          <p\n            className={`${style.ingredientDetails__nutritionaCount} text text_type_digits-default `}\n          >\n            {ingredientInfo?.fat}\n          </p>\n        </li>\n        <li className={style.ingredientDetails__nutritionaValueItem}>\n          <p\n            className={`text text_type_main-default ${style.ingredientDetails__nutritionaName}`}\n          >\n            Углеводы, г\n          </p>\n          <p\n            className={`${style.ingredientDetails__nutritionaCount} text text_type_digits-default `}\n          >\n            {ingredientInfo?.carbohydrates}\n          </p>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default IngredientDetails;\n","import { FC } from \"react\";\r\nimport styles from \"./ingredient.module.css\";\r\nimport IngredientDetails from \"../../components/ingredient-details/ingredient-details\";\r\n\r\nconst IngredientPage: FC = () => {\r\n  return (\r\n    <main className={styles.ingredient}>\r\n      <IngredientDetails />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default IngredientPage;\r\n","import { FC } from \"react\";\r\nimport styles from \"./not-found.module.css\";\r\n\r\nconst NotFoundPage: FC = () => {\r\n  return (\r\n    <main className={styles.notFound}>\r\n      <h2>not found 404</h2>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import { FC } from \"react\";\r\nimport style from \"./status-list.module.css\";\r\n\r\nconst StatusList: FC<{\r\n  title: string;\r\n  list: Array<string>;\r\n  colorTextList?: string;\r\n}> = ({ title, list, colorTextList }) => {\r\n  const colorListStyle = colorTextList\r\n    ? {\r\n        color: colorTextList,\r\n      }\r\n    : {};\r\n    \r\n  return (\r\n    <div>\r\n      <p className=\"text text_type_main-medium mb-6\">{title}</p>\r\n      <ul className={`text text_type_digits-default ${style.statusList}`}>\r\n        {list.map((element, index) => (\r\n          <li style={colorListStyle} className={`${style.statusList__item}`} key={index}>\r\n            {element}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusList;\r\n","import style from \"./icon-ingredient.module.css\";\r\nimport { FC } from \"react\";\r\n\r\nconst IconIngredient: FC<{\r\n  src?: string;\r\n  alt?: string;\r\n  more?: number | null;\r\n}> = ({ src, alt, more }) => {\r\n  const opacity = more ? { opacity: \"0.6\" } : {};\r\n  return (\r\n    <div\r\n      style={{\r\n        // position: \"relative\",\r\n        // zIndex: index,\r\n        // right: 20 * index!,\r\n        // borderRadius: \"50%\",\r\n      }}\r\n    >\r\n      <img\r\n        className={style.IconIngredient__img}\r\n        src={src}\r\n        alt={alt}\r\n        style={opacity}\r\n      />\r\n      {more && (\r\n        <p\r\n          className={`${style.IconIngredient__text} text text_type_main-default`}\r\n        >\r\n          +{more}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IconIngredient;\r\n","import { FC } from \"react\";\r\nimport { orderStatus } from \"../../services/constant\";\r\n\r\nconst statusText = {\r\n  [orderStatus.done]: \"Выполнен\",\r\n  [orderStatus.pending]: \"Готовится\",\r\n  [orderStatus.created]: \"Создан\",\r\n};\r\n\r\nconst OrderStatus: FC<{ status: orderStatus }> = ({ status }) => {\r\n  let styleText = {};\r\n  switch (status) {\r\n    case orderStatus.done: {\r\n      styleText = { color: \"#00CCCC\" };\r\n      break;\r\n    }\r\n    case orderStatus.created: {\r\n      styleText = { color: \"#4C4CFF\" };\r\n      break;\r\n    }\r\n    default: {\r\n      styleText = { color: \"#FFF\" };\r\n    }\r\n  }\r\n\r\n  return (\r\n    <p style={styleText} className=\"mb-15 text text_type_main-default\">\r\n      {statusText[status]}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default OrderStatus;\r\n","import { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { FC, memo, useMemo } from \"react\";\r\nimport { orderStatus } from \"../../services/constant\";\r\nimport { useSelector } from \"../../services/hooks\";\r\nimport { timeSince } from \"../../services/utils\";\r\nimport IconIngredient from \"../icon-ingredient/icon-ingredient\";\r\nimport OrderStatus from \"../order-status/order-status\";\r\nimport style from \"./card-order.module.css\";\r\n\r\nconst CardOrder: FC<{\r\n  orderNameBurger: string;\r\n  orderDateTime: string;\r\n  orderNumber: number;\r\n  orderStatus?: orderStatus;\r\n  idListIngredient: ReadonlyArray<string>;\r\n  maxQuantityIcon: number;\r\n  onlyUniqueIcon: boolean;\r\n}> = memo(\r\n  ({\r\n    orderNameBurger,\r\n    orderDateTime,\r\n    orderNumber,\r\n    idListIngredient,\r\n    onlyUniqueIcon,\r\n    maxQuantityIcon,\r\n    orderStatus,\r\n  }) => {\r\n    const dateTime = new Date(orderDateTime);\r\n\r\n    const ingredients = useSelector(\r\n      (state) => state.burgerIngredients.burgerIngredients\r\n    );\r\n\r\n    const ingredientsIcon = useMemo(() => {\r\n      const listIngredients = onlyUniqueIcon\r\n        ? Array.from(new Set([...idListIngredient]))\r\n        : idListIngredient;\r\n      return listIngredients.map((id) =>\r\n        ingredients.find((item) => id === item._id)\r\n      );\r\n    }, [idListIngredient, onlyUniqueIcon, ingredients]);\r\n\r\n    const totalSum = idListIngredient.reduce((accumulator, currentValue) => {\r\n      let ingredient = ingredients.find((a) => a._id === currentValue);\r\n      return (accumulator +=\r\n        ingredient?.type === \"bun\"\r\n          ? ingredient?.price! * 2\r\n          : ingredient?.price!);\r\n    }, 0);\r\n\r\n    const listIcon = (\r\n      <ul className={style.cardOrder__listIngredients}>\r\n        {ingredientsIcon.slice(0, maxQuantityIcon).map((item, index) => {\r\n          return (\r\n            <li\r\n              className={style.cardOrder__listIngredientItem}\r\n              key={index}\r\n              style={{\r\n                zIndex: maxQuantityIcon - index,\r\n                right: index * 16,\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <IconIngredient\r\n                src={item?.image_mobile}\r\n                alt={item?.name}\r\n                more={\r\n                  index === maxQuantityIcon - 1\r\n                    ? ingredientsIcon.length - maxQuantityIcon\r\n                    : null\r\n                }\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n\r\n    return (\r\n      <div className={style.cardOrder}>\r\n        <div className={style.cardOrder_wrapper}>\r\n          <div className={style.cardOrder__info}>\r\n            <p\r\n              className={`text text_type_digits-default ${style.cardOrder__orderNumber}`}\r\n            >\r\n              #{orderNumber}\r\n            </p>\r\n            <p\r\n              className={`text text_type_main-default text_color_inactive ${style.cardOrder__dateNumber}`}\r\n            >\r\n              {timeSince(dateTime)}\r\n            </p>\r\n          </div>\r\n          <p className={`text text_type_main-medium ${style.cardOrder__name}`}>\r\n            {orderNameBurger}\r\n          </p>\r\n          {orderStatus && <OrderStatus status={orderStatus} />}\r\n          <div className={style.cardOrder__orderDetails}>\r\n            {listIcon}\r\n            <div className={style.cardOrder__total}>\r\n              <p className=\"text text_type_digits-default pr-2\">{totalSum.toString()}</p>\r\n              <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default CardOrder;\r\n","export const FEED_CONNECTION_INIT: \"FEED_CONNECTION_INIT\" =\r\n  \"FEED_CONNECTION_INIT\";\r\nexport const FEED_CONNECTION_CLOSE: \"FEED_CONNECTION_CLOSE\" =\r\n  \"FEED_CONNECTION_CLOSE\";\r\nexport const FEED_CONNECTION_SUCCESS: \"FEED_CONNECTION_SUCCESS\" =\r\n  \"FEED_CONNECTION_SUCCESS\";\r\nexport const FEED_CONNECTION_ERROR: \"FEED_CONNECTION_ERROR\" =\r\n  \"FEED_CONNECTION_ERROR\";\r\nexport const FEED_CONNECTION_CLOSED: \"FEED_CONNECTION_CLOSED\" =\r\n  \"FEED_CONNECTION_CLOSED\";\r\nexport const FEED_GET_MESSAGE: \"FEED_GET_MESSAGE\" = \"FEED_GET_MESSAGE\";\r\n\r\nexport interface IFeedWsInit {\r\n  readonly type: typeof FEED_CONNECTION_INIT;\r\n  readonly payload: string;\r\n}\r\n\r\nexport interface IFeedWsClose {\r\n  readonly type: typeof FEED_CONNECTION_CLOSE;\r\n}\r\n\r\nexport interface IFeedWsConnectionSuccess {\r\n  readonly type: typeof FEED_CONNECTION_SUCCESS;\r\n}\r\n\r\nexport interface IFeedWsConnectionError {\r\n  readonly type: typeof FEED_CONNECTION_ERROR;\r\n}\r\n\r\nexport interface IFeedWsConnectionClosed {\r\n  readonly type: typeof FEED_CONNECTION_CLOSED;\r\n}\r\n\r\nexport interface IFeedWsGetMessage {\r\n  readonly type: typeof FEED_GET_MESSAGE;\r\n  readonly payload: Event;\r\n}\r\n\r\nexport const feedWsInit = (payload: string): IFeedWsInit => {\r\n  return {\r\n    type: FEED_CONNECTION_INIT,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const feedWsClose = (): IFeedWsClose => {\r\n  return {\r\n    type: FEED_CONNECTION_CLOSE,\r\n  };\r\n};\r\n\r\nexport const feedConnectionSuccess = (): IFeedWsConnectionSuccess => {\r\n  return {\r\n    type: FEED_CONNECTION_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const feedConnectionError = (): IFeedWsConnectionError => {\r\n  return {\r\n    type: FEED_CONNECTION_ERROR,\r\n  };\r\n};\r\n\r\nexport const feedConnectionClosed = (): IFeedWsConnectionClosed => {\r\n  return {\r\n    type: FEED_CONNECTION_CLOSED,\r\n  };\r\n};\r\n\r\nexport const feedGetMessage = (message: Event): IFeedWsGetMessage => {\r\n  return {\r\n    type: FEED_GET_MESSAGE,\r\n    payload: message,\r\n  };\r\n};\r\n\r\nexport type TFeedWsActions =\r\n  | IFeedWsInit\r\n  | IFeedWsConnectionSuccess\r\n  | IFeedWsConnectionError\r\n  | IFeedWsConnectionClosed\r\n  | IFeedWsGetMessage;\r\n","import { FC, useEffect, useMemo } from \"react\";\r\nimport style from \"./feed.module.css\";\r\nimport StatusList from \"../../components/status-list/status-list\";\r\nimport CardOrder from \"../../components/card-order/card-order\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport { feedWsClose, feedWsInit } from \"../../services/action/ws-feed\";\r\nimport { WS_BASE_URL } from \"../../services/api\";\r\nimport { orderStatus } from \"../../services/constant\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst FeedPage: FC = () => {\r\n  const location = useLocation();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(feedWsInit(`${WS_BASE_URL}/orders/all`));\r\n    return () => {\r\n      dispatch(feedWsClose());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const total = useSelector((state) => state.feed.total);\r\n  const totalToday = useSelector((state) => state.feed.totalToday);\r\n  const orders = useSelector((state) => state.feed.orders);\r\n\r\n  const listByDoneOrders = useMemo(() => {\r\n    return orders\r\n      .filter((item) => item.status === orderStatus.done)\r\n      .slice(0, 10)\r\n      .map((item) => item.number.toString());\r\n  }, [orders]);\r\n\r\n  const listByPendingOrders = useMemo(() => {\r\n    return orders\r\n      .filter((item) => item.status === orderStatus.pending)\r\n      .slice(0, 10)\r\n      .map((item) => item.number.toString());\r\n  }, [orders]);\r\n\r\n  return (\r\n    <main className={style.feedPage}>\r\n      <div className={style.feedPage__wrapper}>\r\n        <h2 className=\"text text_type_main-large pt-10 pb-5\">Лента заказов</h2>\r\n        <div className={style.feedPage__content}>\r\n          <section>\r\n            <ul className={style.feedList}>\r\n              {orders.map((item, index) => (\r\n                <li className={style.feedList__item} key={index}>\r\n                  <Link\r\n                    key={item.number}\r\n                    to={{\r\n                      pathname: `/feed/${item.number}`,\r\n                      state: { background: location },\r\n                    }}\r\n                    style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n                  >\r\n                    <CardOrder\r\n                      orderNameBurger={item.name}\r\n                      orderNumber={item.number}\r\n                      orderDateTime={item.createdAt}\r\n                      idListIngredient={item.ingredients}\r\n                      onlyUniqueIcon={true}\r\n                      maxQuantityIcon={5}\r\n                    />\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n          <section className=\"feedInfo\">\r\n            <div className={style.feedStatusLists}>\r\n              <StatusList\r\n                title=\"Готовы:\"\r\n                list={listByDoneOrders}\r\n                colorTextList=\"#00CCCC\"\r\n              />\r\n\r\n              <StatusList title=\"В работе:\" list={listByPendingOrders} />\r\n            </div>\r\n            <div className={style.orderAllTime}>\r\n              <p className=\"text text_type_main-medium\">\r\n                Выполнено за все время:\r\n              </p>\r\n              <p className={`text text_type_digits-large textShadow`}>\r\n                {total}\r\n              </p>\r\n            </div>\r\n            <div className={style.orderToday}>\r\n              <p className=\"text text_type_main-medium\">\r\n                Выполнено за сегодня:\r\n              </p>\r\n              <p className={`text text_type_digits-large textShadow`}>\r\n                {totalToday}\r\n              </p>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default FeedPage;\r\n","import { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { FC } from \"react\";\r\nimport { TIngredient } from \"../../services/types/data\";\r\nimport IconIngredient from \"../icon-ingredient/icon-ingredient\";\r\nimport style from \"./order-list.module.css\";\r\n\r\nconst OrderList: FC<{ list: ReadonlyArray<TIngredient> }> = ({ list }) => {\r\n  return (\r\n    <ul className={style.orderList}>\r\n      {list.map((item, index) => (\r\n        <li className={style.orderList__item} key={index}>\r\n          <IconIngredient src={item.image_mobile} />\r\n          <p className=\"pl-4 text text_type_main-default\">{item.name}</p>\r\n          <div className={style.orderList__total}>\r\n            <p className=\"text text_type_digits-default\">\r\n              {item.qty ? item.qty : 1} x {item.price}\r\n            </p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n","import { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useMemo } from \"react\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport { orderStatus } from \"../../services/constant\";\r\nimport { useSelector } from \"../../services/hooks\";\r\nimport { timeSince } from \"../../services/utils\";\r\nimport OrderList from \"../order-list/order-list\";\r\nimport OrderStatus from \"../order-status/order-status\";\r\nimport style from \"./order-info.module.css\";\r\n\r\nconst OrderInfo = () => {\r\n  const location = useLocation<{\r\n    background?: Location;\r\n  }>();\r\n  const isFeed = useRouteMatch({\r\n    path: `/:feed/:number`,\r\n    exact: true,\r\n  });\r\n\r\n  const { number } = useParams<{ number: string }>();\r\n\r\n  const myOrders = useSelector((state) => state.myOrders.orders);\r\n  const allOrders = useSelector((state) => state.feed.orders);\r\n  const ingredients = useSelector(\r\n    (state) => state.burgerIngredients.burgerIngredients\r\n  );\r\n\r\n  const searchOrder = (\r\n    listOrder: ReadonlyArray<{\r\n      ingredients: ReadonlyArray<string>;\r\n      id: string;\r\n      status: orderStatus;\r\n      number: number;\r\n      createdAt: string;\r\n      updateAt: string;\r\n      name: string;\r\n    }>,\r\n    number: number\r\n  ) => {\r\n    return listOrder.find((item) => item.number === number);\r\n  };\r\n\r\n  const order = !!isFeed\r\n    ? searchOrder(allOrders, parseInt(number))\r\n    : searchOrder(myOrders, parseInt(number));\r\n\r\n  const dateTime = new Date(order?.createdAt!);\r\n\r\n  const totalSum = order?.ingredients.reduce((accumulator, currentValue) => {\r\n    let ingredient = ingredients.find((a) => a._id === currentValue);\r\n    return (accumulator +=\r\n      ingredient?.type === \"bun\" ? ingredient?.price! * 2 : ingredient?.price!);\r\n  }, 0);\r\n\r\n  const ingredientsCurrentOrder = useMemo(() => {\r\n    return order?.ingredients.map((id) =>\r\n      ingredients.find((item) => id === item._id)\r\n    );\r\n  }, [order, ingredients]);\r\n\r\n  // Подсчитываем количество ингредиентов\r\n  const ingredientsListWithCount = new Map();\r\n  ingredientsCurrentOrder?.forEach(function (el) {\r\n    if (!el) return;\r\n    if (ingredientsListWithCount.has(el[\"_id\"])) {\r\n      ingredientsListWithCount.get(el[\"_id\"]).qty++;\r\n    } else {\r\n      if (el.type === \"bun\") {\r\n        ingredientsListWithCount.set(el[\"_id\"], Object.assign(el, { qty: 2 }));\r\n      } else {\r\n        ingredientsListWithCount.set(el[\"_id\"], Object.assign(el, { qty: 1 }));\r\n      }\r\n    }\r\n  });\r\n\r\n  if (order) {\r\n    return (\r\n      <div style={{ maxWidth: 640 }}>\r\n        <div className={style.orderInfo__header}>\r\n          {!location?.state?.background && (\r\n            <p className=\"mb-10 text text_type_digits-default\">\r\n              #{order?.number}\r\n            </p>\r\n          )}\r\n          <p className=\"mb-3 text text_type_main-medium\">{order?.name}</p>\r\n        </div>\r\n        <div className={style.orderInfo__main}>\r\n          <OrderStatus status={order.status} />\r\n          <p className=\"mb-6 text text_type_main-medium\">Состав:</p>\r\n          <OrderList list={Array.from(ingredientsListWithCount.values())} />\r\n        </div>\r\n        <div className={style.orderInfo__footer}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            {timeSince(dateTime)}\r\n          </p>\r\n          <div className={style.orderInfo__total}>\r\n            <p className=\"mr-2 text text_type_digits-default\">{totalSum}</p>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return <p>Загрузка...</p>;\r\n};\r\n\r\nexport default OrderInfo;\r\n","export const MY_ORDERS_CONNECTION_INIT: \"MY_ORDERS_CONNECTION_INIT\" =\r\n  \"MY_ORDERS_CONNECTION_INIT\";\r\nexport const MY_ORDERS_CONNECTION_CLOSE: \"MY_ORDERS_CONNECTION_CLOSE\" =\r\n  \"MY_ORDERS_CONNECTION_CLOSE\";\r\nexport const MY_ORDERS_CONNECTION_SUCCESS: \"MY_ORDERS_CONNECTION_SUCCESS\" =\r\n  \"MY_ORDERS_CONNECTION_SUCCESS\";\r\nexport const MY_ORDERS_CONNECTION_ERROR: \"MY_ORDERS_CONNECTION_ERROR\" =\r\n  \"MY_ORDERS_CONNECTION_ERROR\";\r\nexport const MY_ORDERS_CONNECTION_CLOSED: \"MY_ORDERS_CONNECTION_CLOSED\" =\r\n  \"MY_ORDERS_CONNECTION_CLOSED\";\r\nexport const MY_ORDERS_GET_MESSAGE: \"MY_ORDERS_GET_MESSAGE\" =\r\n  \"MY_ORDERS_GET_MESSAGE\";\r\n\r\nexport interface IMyOrdersWsInit {\r\n  readonly type: typeof MY_ORDERS_CONNECTION_INIT;\r\n  readonly payload: string;\r\n}\r\n\r\nexport interface IMyOrdersWsClose {\r\n  readonly type: typeof MY_ORDERS_CONNECTION_CLOSE;\r\n}\r\n\r\nexport interface IMyOrdersWsConnectionSuccess {\r\n  readonly type: typeof MY_ORDERS_CONNECTION_SUCCESS;\r\n}\r\n\r\nexport interface IMyOrdersWsConnectionError {\r\n  readonly type: typeof MY_ORDERS_CONNECTION_ERROR;\r\n}\r\n\r\nexport interface IMyOrdersWsConnectionClosed {\r\n  readonly type: typeof MY_ORDERS_CONNECTION_CLOSED;\r\n}\r\n\r\nexport interface IMyOrdersWsGetMessage {\r\n  readonly type: typeof MY_ORDERS_GET_MESSAGE;\r\n  readonly payload: Event;\r\n}\r\n\r\nexport const myOrdersWsInit = (payload: string): IMyOrdersWsInit => {\r\n  return {\r\n    type: MY_ORDERS_CONNECTION_INIT,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const myOrdersWsClose = (): IMyOrdersWsClose => {\r\n  return {\r\n    type: MY_ORDERS_CONNECTION_CLOSE,\r\n  };\r\n};\r\n\r\nexport const myOrdersConnectionSuccess = (): IMyOrdersWsConnectionSuccess => {\r\n  return {\r\n    type: MY_ORDERS_CONNECTION_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const myOrdersConnectionError = (): IMyOrdersWsConnectionError => {\r\n  return {\r\n    type: MY_ORDERS_CONNECTION_ERROR,\r\n  };\r\n};\r\n\r\nexport const myOrdersConnectionClosed = (): IMyOrdersWsConnectionClosed => {\r\n  return {\r\n    type: MY_ORDERS_CONNECTION_CLOSED,\r\n  };\r\n};\r\n\r\nexport const myOrdersGetMessage = (message: Event): IMyOrdersWsGetMessage => {\r\n  return {\r\n    type: MY_ORDERS_GET_MESSAGE,\r\n    payload: message,\r\n  };\r\n};\r\n\r\nexport type TMyOrdersWsActions =\r\n  | IMyOrdersWsInit\r\n  | IMyOrdersWsConnectionSuccess\r\n  | IMyOrdersWsConnectionError\r\n  | IMyOrdersWsConnectionClosed\r\n  | IMyOrdersWsGetMessage;\r\n","import { FC, useEffect } from \"react\";\r\nimport OrderInfo from \"../../components/order-info/order-info\";\r\nimport { feedWsClose, feedWsInit } from \"../../services/action/ws-feed\";\r\nimport {\r\n  myOrdersWsClose,\r\n  myOrdersWsInit,\r\n} from \"../../services/action/ws-my-orders\";\r\nimport { WS_BASE_URL } from \"../../services/api\";\r\nimport { ACCESS_TOKEN } from \"../../services/constant\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport { getCookie } from \"../../services/utils\";\r\nimport styles from \"./order-info.module.css\";\r\n\r\nconst OrderInfoPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.userInfo.user);\r\n  useEffect(() => {\r\n    dispatch(feedWsInit(`${WS_BASE_URL}/orders/all`));\r\n    if (user) {\r\n      dispatch(\r\n        myOrdersWsInit(`${WS_BASE_URL}/orders?token=${getCookie(ACCESS_TOKEN)}`)\r\n      );\r\n    }\r\n    return () => {\r\n      dispatch(feedWsClose());\r\n      if (user) {\r\n        dispatch(myOrdersWsClose());\r\n      }\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <main className={styles.orderInfo}>\r\n      <OrderInfo />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default OrderInfoPage;\r\n","import { FC, useEffect } from \"react\";\r\nimport SidebarMenu from \"../../components/sidebar-menu/sidebar-menu\";\r\nimport CardOrder from \"../../components/card-order/card-order\";\r\nimport styles from \"./order-history.module.css\";\r\nimport { WS_BASE_URL } from \"../../services/api\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport {\r\n  myOrdersWsClose,\r\n  myOrdersWsInit,\r\n} from \"../../services/action/ws-my-orders\";\r\nimport { ACCESS_TOKEN } from \"../../services/constant\";\r\nimport { getCookie } from \"../../services/utils\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { v4 } from \"uuid\";\r\n\r\nconst OrderHistoryPage: FC = () => {\r\n  const location = useLocation();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      myOrdersWsInit(`${WS_BASE_URL}/orders?token=${getCookie(ACCESS_TOKEN)}`)\r\n    );\r\n    return () => {\r\n      dispatch(myOrdersWsClose());\r\n    };\r\n  }, [dispatch]);\r\n\r\n  const orders = useSelector((state) => state.myOrders.orders);\r\n\r\n  return (\r\n    <main className={styles.orderHistory}>\r\n      <div className={styles.orderHistory__container}>\r\n        <div className={styles.orderHistory__wrapper}>\r\n          <div className=\"sidebarLeft\">\r\n            <div className=\"sidebarLeft__wrapper pb-20\">\r\n              <SidebarMenu />\r\n            </div>\r\n            <p className=\"text text_type_main-default text_color_inactive aboutPage\">\r\n              В этом разделе вы можете просмотреть свою историю заказов\r\n            </p>\r\n          </div>\r\n          <section>\r\n            <ul className={styles.orderHistoryList}>\r\n              {orders\r\n                .slice()\r\n                .reverse()\r\n                .map((item) => (\r\n                  <li className={styles.orderHistoryList__item} key={v4()}>\r\n                    <Link\r\n                      key={item.number}\r\n                      to={{\r\n                        pathname: `/profile/orders/${item.number}`,\r\n                        state: { background: location },\r\n                      }}\r\n                      style={{ textDecoration: \"none\", color: \"#fff\" }}\r\n                    >\r\n                      <CardOrder\r\n                        orderNameBurger={item.name}\r\n                        orderNumber={item.number}\r\n                        orderDateTime={item.createdAt}\r\n                        orderStatus={item.status}\r\n                        idListIngredient={item.ingredients}\r\n                        onlyUniqueIcon={true}\r\n                        maxQuantityIcon={5}\r\n                      />\r\n                    </Link>\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default OrderHistoryPage;\r\n","import AppHeader from \"../app-header/app-header\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useHistory,\r\n  useLocation,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport { FC, useCallback, useEffect, useState } from \"react\";\r\nimport HomePage from \"../../pages/home/home\";\r\nimport LoginPage from \"../../pages/login/login\";\r\nimport RegisterPage from \"../../pages/register/register\";\r\nimport ForgotPasswordPage from \"../../pages/forgot-password/forgot-password\";\r\nimport ResetPasswordPage from \"../../pages/reset-password/reset-password\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks\";\r\nimport { getProfileThunk, refreshTokenThunk } from \"../../services/action/user\";\r\nimport ProfilePage from \"../../pages/profile/profile\";\r\nimport { getIngredientItemsThunk } from \"../../services/action/burger-ingredients\";\r\nimport { setInterval } from \"timers\";\r\nimport { getCookie } from \"../../services/utils\";\r\nimport { REFRESH_TOKEN } from \"../../services/constant\";\r\nimport { ProtectedRoute } from \"../protected-route/protected-route\";\r\nimport Modal from \"../modal/modal\";\r\nimport IngredientPage from \"../../pages/ingredient/ingredient\";\r\nimport NotFoundPage from \"../../pages/not-found/not-found\";\r\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\r\nimport { Location } from \"history\";\r\nimport FeedPage from \"../../pages/feed/feed\";\r\nimport OrderPage from \"../../pages/order-info/order-info\";\r\nimport OrderHistoryPage from \"../../pages/order-history/order-history\";\r\nimport OrderInfo from \"../order-info/order-info\";\r\n\r\nconst App: FC = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((store) => store.userInfo.user);\r\n  const [isUserLoaded, setUserLoaded] = useState(false);\r\n  const location = useLocation<{\r\n    background?: Location;\r\n  }>();\r\n  const history = useHistory();\r\n\r\n  const init = async () => {\r\n    await dispatch(getIngredientItemsThunk());\r\n    await dispatch(getProfileThunk());\r\n    setUserLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n    setInterval(() => {\r\n      dispatch(refreshTokenThunk(getCookie(REFRESH_TOKEN)));\r\n    }, 1000 * 60 * 20);\r\n  }, []);\r\n\r\n  const handelCloseModal = useCallback(() => {\r\n    history.goBack();\r\n  }, [history]);\r\n\r\n  const background =\r\n    history.action === \"PUSH\" && location.state && location.state.background;\r\n\r\n  const orderNumber = useRouteMatch<{ number?: string | undefined }>([\r\n    \"/feed/:number\",\r\n    \"/profile/orders/:number\"\r\n  ])?.params?.number;\r\n\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      <Switch location={background || location}>\r\n        <Route path=\"/\" exact={true} component={HomePage}></Route>\r\n        <Route path=\"/login\" component={LoginPage}></Route>\r\n        <Route path=\"/register\" component={RegisterPage}></Route>\r\n        <Route path=\"/forgot-password\" component={ForgotPasswordPage}></Route>\r\n        <Route path=\"/reset-password\" component={ResetPasswordPage}></Route>\r\n        <ProtectedRoute\r\n          path={`/profile`}\r\n          exact={true}\r\n          user={user}\r\n          isUserLoaded={isUserLoaded}\r\n        >\r\n          <ProfilePage />\r\n        </ProtectedRoute>\r\n        <Route path=\"/ingredients/:id\" component={IngredientPage}></Route>\r\n        <Route path=\"/feed/:number\" component={OrderPage}></Route>\r\n        <Route path=\"/feed\" component={FeedPage}></Route>\r\n        <ProtectedRoute\r\n          path={`/profile/orders`}\r\n          exact={true}\r\n          user={user}\r\n          isUserLoaded={isUserLoaded}\r\n        >\r\n          <OrderHistoryPage />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute\r\n          path={`/profile/orders/:number`}\r\n          exact={true}\r\n          user={user}\r\n          isUserLoaded={isUserLoaded}\r\n        >\r\n          <OrderPage />\r\n        </ProtectedRoute>\r\n        <Route>\r\n          <NotFoundPage />\r\n        </Route>\r\n      </Switch>\r\n\r\n      {background && (\r\n        <>\r\n          <Route path=\"/feed/:number\">\r\n            <Modal onClose={handelCloseModal} title={`#${orderNumber}`}>\r\n              <OrderInfo />\r\n            </Modal>\r\n          </Route>\r\n\r\n          <ProtectedRoute\r\n            path={`/profile/orders/:number`}\r\n            exact={true}\r\n            user={user}\r\n            isUserLoaded={isUserLoaded}\r\n          >\r\n            <Modal onClose={handelCloseModal} title={`#${orderNumber}`}>\r\n              <OrderInfo />\r\n            </Modal>\r\n          </ProtectedRoute>\r\n\r\n          <Route path=\"/ingredients/:id\">\r\n            <Modal onClose={handelCloseModal} title=\"Детали ингредиента\">\r\n              <IngredientDetails />\r\n            </Modal>\r\n          </Route>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {\n  BURGER_INGREDIENTS_FAILED,\n  BURGER_INGREDIENTS_SUCCESS,\n  BURGER_INGREDIENTS_REQUEST,\n  INCREMENT_INGREDIENTS,\n  INCREMENT_BUN,\n  DECREMENT_INGREDIENTS,\n  RESET_QTY_INGREDIENTS,\n  TBurgerIngredientsActions,\n} from \"../action/burger-ingredients\";\nimport { TIngredient } from \"../types/data\";\n\ntype TIngredientsState = {\n  burgerIngredients: ReadonlyArray<TIngredient>;\n  burgerIngredientsRequest: boolean;\n  burgerIngredientsFailed: boolean;\n};\n\nconst ingredientsInitialState: TIngredientsState = {\n  burgerIngredients: [],\n  burgerIngredientsRequest: false,\n  burgerIngredientsFailed: false,\n};\n\nexport const burgerIngredientsReducer = (\n  state = ingredientsInitialState,\n  action: TBurgerIngredientsActions\n) => {\n  switch (action.type) {\n    case BURGER_INGREDIENTS_REQUEST: {\n      return { ...state, ingredientsInitialState: true };\n    }\n    case BURGER_INGREDIENTS_SUCCESS: {\n      return {\n        burgerIngredients: action.payload,\n        burgerIngredientsRequest: false,\n        burgerIngredientsFailed: false,\n      };\n    }\n    case BURGER_INGREDIENTS_FAILED: {\n      return {\n        ...state,\n        burgerIngredientsRequest: false,\n        burgerIngredientsFailed: true,\n      };\n    }\n    case INCREMENT_INGREDIENTS: {\n      return {\n        ...state,\n        burgerIngredients: [...state.burgerIngredients].map((element) =>\n          element._id === action.payload._id\n            ? { ...element, qty: element.qty! + 1 || 1 }\n            : element\n        ),\n      };\n    }\n    case DECREMENT_INGREDIENTS: {\n      return {\n        ...state,\n        burgerIngredients: [...state.burgerIngredients].map((element) =>\n          element._id === action.payload._id\n            ? { ...element, qty: element.qty! - 1 || null }\n            : element\n        ),\n      };\n    }\n    // Булка может быть одна\n    // Если мы перетащили булку, то добавляем ей qty = 2(так как их две)\n    // Остальным булкам убираем qty = null\n    // Если это не булка, ничего не делаем\n    case INCREMENT_BUN: {\n      return {\n        ...state,\n        burgerIngredients: [...state.burgerIngredients].map((element) =>\n          element._id === action.payload._id && element.type === \"bun\"\n            ? { ...element, qty: 2 }\n            : element.type === \"bun\"\n            ? { ...element, qty: null }\n            : element\n        ),\n      };\n    }\n\n    case RESET_QTY_INGREDIENTS: {\n      return {\n        ...state,\n        burgerIngredients: [...state.burgerIngredients].map((element) => {\n          return { ...element, qty: null };\n        }),\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import {\n  ADD_INGREDIENT,\n  DELETE_ITEM,\n  ADD_BUN,\n  REORDER_INGREDIENTS,\n  SET_DEFAULT_VALUE_INGREDIENTS,\n  TBurgerConstructorActions,\n} from \"../action/burger-constructor\";\nimport { TIngredientWithUniqKey } from \"../types/data\";\n\ntype TConstructorState = {\n  ingredients: Array<TIngredientWithUniqKey>;\n};\n\nconst constructorInitialState: TConstructorState = {\n  ingredients: [],\n};\n\nexport const burgerConstructorReducer = (\n  state = constructorInitialState,\n  action: TBurgerConstructorActions\n) => {\n  switch (action.type) {\n    case ADD_INGREDIENT: {\n      return {\n        ...state,\n        ingredients: [...state.ingredients, action.payload],\n      };\n    }\n    case ADD_BUN: {\n      const indexElement = [...state.ingredients].findIndex((element) => {\n        return element.type === \"bun\";\n      });\n      // Если булки нет в массиве, то добавляем\n      // Если есть, то ищем индекс и меняем\n      const res =\n        indexElement === -1\n          ? [action.payload, ...state.ingredients]\n          : [\n              ...state.ingredients.slice(0, indexElement),\n              action.payload,\n              ...state.ingredients.slice(indexElement + 1),\n            ];\n\n      return {\n        ...state,\n        ingredients: res,\n      };\n    }\n    case DELETE_ITEM: {\n      return {\n        ...state,\n        ingredients: [...state.ingredients].filter((element) => {\n          return element.uuid !== action.id;\n        }),\n      };\n    }\n    case REORDER_INGREDIENTS: {\n      return {\n        ...state,\n        ingredients: [...action.payload],\n      };\n    }\n    case SET_DEFAULT_VALUE_INGREDIENTS: {\n      return {\n        ...constructorInitialState,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { TIngredient } from \"../types/data\";\n\nexport const SET_INGREDIENT_DETAIL: \"SET_INGREDIENT_DETAIL\" =\n  \"SET_INGREDIENT_DETAIL\";\nexport const INIT_INGREDIENT_DETAIL = \"INIT_INGREDIENT_DETAIL\";\n\nexport interface TSetDetailInfoIngredient {\n  readonly type: typeof SET_INGREDIENT_DETAIL;\n  readonly payload: TIngredient;\n}\n\nexport interface TSetDefaultValuesIngredientDetail {\n  readonly type: typeof INIT_INGREDIENT_DETAIL;\n}\n\nexport const setDetailInfoIngredient = (\n  payload: TIngredient\n): TSetDetailInfoIngredient => ({\n  type: SET_INGREDIENT_DETAIL,\n  payload,\n});\n\nexport const setDefaultValuesIngredientDetail =\n  (): TSetDefaultValuesIngredientDetail => ({\n    type: INIT_INGREDIENT_DETAIL,\n  });\n\nexport type TIngredientDetailsActions =\n  | TSetDetailInfoIngredient\n  | TSetDefaultValuesIngredientDetail;\n","import {\n  SET_INGREDIENT_DETAIL,\n  INIT_INGREDIENT_DETAIL,\n  TIngredientDetailsActions,\n} from \"../action/ingredient-details\";\nimport { TIngredient } from \"../types/data\";\n\ntype TIngredientWithNull<T> = { [k in keyof T]: T[k] | null };\n\nconst ingredientDetailState: TIngredientWithNull<TIngredient> = {\n  calories: null,\n  carbohydrates: null,\n  fat: null,\n  image: null,\n  image_large: null,\n  image_mobile: null,\n  name: null,\n  price: null,\n  proteins: null,\n  type: null,\n  __v: null,\n  _id: null,\n};\n\nexport const ingredientDetailsReducer = (\n  state = ingredientDetailState,\n  action: TIngredientDetailsActions\n) => {\n  switch (action.type) {\n    case SET_INGREDIENT_DETAIL: {\n      return {\n        ...action.payload,\n      };\n    }\n    case INIT_INGREDIENT_DETAIL: {\n      return {\n        ...ingredientDetailState,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import {\n  ORDER_REQUEST,\n  ORDER_SUCCESS,\n  ORDER_FAILED,\n  TOrderDetailsActions,\n} from \"../action/order-details\";\nimport { TOrderSuccess } from \"../types/data\";\n\nconst orderInitState: TOrderSuccess & {\n  orderRequest: boolean;\n  orderFailed: boolean;\n} = {\n  orderRequest: false,\n  orderFailed: false,\n  order: { number: 0 },\n  success: false,\n  name: \"\",\n};\nexport const orderStateReducer = (\n  state = orderInitState,\n  action: TOrderDetailsActions\n) => {\n  switch (action.type) {\n    case ORDER_REQUEST: {\n      return {\n        ...state,\n        orderRequest: true,\n        success: false,\n      };\n    }\n    case ORDER_SUCCESS: {\n      return {\n        ...state,\n        ...action.payload,\n        orderRequest: false,\n        orderFailed: false,\n      };\n    }\n    case ORDER_FAILED: {\n      return {\n        ...state,\n        orderRequest: false,\n        orderFailed: true,\n        success: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import {\n  CONFIRM_RESET_PASSWORD_FAILED,\n  CONFIRM_RESET_PASSWORD_REQUEST,\n  CONFIRM_RESET_PASSWORD_SUCCESS,\n  GET_CODE_RESET_PASSWORD_FAILED,\n  GET_CODE_RESET_PASSWORD_REQUEST,\n  GET_CODE_RESET_PASSWORD_SUCCESS,\n  REGISTER_REQUEST_FAILED,\n  REGISTER_REQUEST,\n  REGISTER_REQUEST_SUCCESS,\n  TUserActions,\n  LOGIN_REQUEST,\n  LOGIN_REQUEST_SUCCESS,\n  LOGIN_REQUEST_FAILED,\n  GET_PROFILE_REQUEST,\n  GET_PROFILE_REQUEST_SUCCESS,\n  GET_PROFILE_REQUEST_FAILED,\n  LOGOUT_REQUEST,\n  LOGOUT_REQUEST_FAILED,\n  LOGOUT_REQUEST_SUCCESS,\n} from \"../action/user\";\nimport { TUser } from \"../types/data\";\n\nconst userState: TUser = {\n  success: false,\n  user: null,\n  accessToken: \"\",\n  refreshToken: \"\",\n  registerInfo: {\n    request: false,\n    failedRequest: false,\n    success: false,\n  },\n  codePasswordInfo: {\n    request: false,\n    failedRequest: false,\n    message: \"\",\n    success: false,\n  },\n  confirmResetPass: {\n    request: false,\n    failedRequest: false,\n    message: \"\",\n    success: false,\n  },\n  loginInfo: {\n    request: false,\n    failedRequest: false,\n    success: false,\n  },\n  getProfileInfo: {\n    request: false,\n    failedRequest: false,\n    success: false,\n  },\n  logoutInfo: {\n    request: false,\n    failedRequest: false,\n    success: false,\n    message: \"\",\n  },\n};\n\nexport const userStateReducer = (\n  state = userState,\n  action: TUserActions\n): TUser => {\n  switch (action.type) {\n    case REGISTER_REQUEST: {\n      return {\n        ...state,\n        registerInfo: {\n          ...state.registerInfo,\n          request: true,\n          success: false,\n          failedRequest: false,\n        },\n      };\n    }\n    case REGISTER_REQUEST_SUCCESS: {\n      return {\n        ...state,\n        user: action.payload.user,\n        registerInfo: {\n          ...state.registerInfo,\n          request: false,\n          success: true,\n          failedRequest: false,\n        },\n      };\n    }\n    case REGISTER_REQUEST_FAILED: {\n      return {\n        ...state,\n        registerInfo: {\n          ...state.registerInfo,\n          request: false,\n          success: false,\n          failedRequest: true,\n        },\n      };\n    }\n    case GET_CODE_RESET_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        codePasswordInfo: {\n          ...state.codePasswordInfo,\n          request: true,\n          failedRequest: false,\n        },\n      };\n    }\n    case GET_CODE_RESET_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        codePasswordInfo: {\n          ...state.codePasswordInfo,\n          ...action.payload,\n          request: false,\n          failedRequest: false,\n        },\n      };\n    }\n    case GET_CODE_RESET_PASSWORD_FAILED: {\n      return {\n        ...state,\n        codePasswordInfo: {\n          ...state.codePasswordInfo,\n          request: false,\n          failedRequest: true,\n        },\n      };\n    }\n    case CONFIRM_RESET_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        confirmResetPass: {\n          ...state.confirmResetPass,\n          request: true,\n          failedRequest: false,\n        },\n      };\n    }\n    case CONFIRM_RESET_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        confirmResetPass: {\n          ...state.confirmResetPass,\n          ...action.payload,\n          request: false,\n          failedRequest: false,\n        },\n      };\n    }\n    case CONFIRM_RESET_PASSWORD_FAILED: {\n      return {\n        ...state,\n        confirmResetPass: {\n          ...state.confirmResetPass,\n          request: false,\n          failedRequest: true,\n        },\n      };\n    }\n    case LOGIN_REQUEST: {\n      return {\n        ...state,\n        loginInfo: {\n          ...state.loginInfo,\n          request: true,\n          failedRequest: false,\n        },\n      };\n    }\n    case LOGIN_REQUEST_SUCCESS: {\n      return {\n        ...state,\n        user: action.payload.user,\n        loginInfo: {\n          ...state.loginInfo,\n          ...action.payload,\n          request: false,\n          failedRequest: false,\n        },\n      };\n    }\n    case LOGIN_REQUEST_FAILED: {\n      return {\n        ...state,\n        loginInfo: {\n          ...state.loginInfo,\n          request: false,\n          failedRequest: true,\n        },\n      };\n    }\n\n    case GET_PROFILE_REQUEST: {\n      return {\n        ...state,\n        getProfileInfo: {\n          ...state.getProfileInfo,\n          request: true,\n          failedRequest: false,\n        },\n      };\n    }\n    case GET_PROFILE_REQUEST_SUCCESS: {\n      return {\n        ...state,\n        user: action.payload.user,\n        getProfileInfo: {\n          ...state.getProfileInfo,\n          success: action.payload.success,\n          request: false,\n          failedRequest: false,\n        },\n      };\n    }\n    case GET_PROFILE_REQUEST_FAILED: {\n      return {\n        ...state,\n        getProfileInfo: {\n          ...state.getProfileInfo,\n          request: false,\n          failedRequest: true,\n        },\n      };\n    }\n\n    case LOGOUT_REQUEST: {\n      return {\n        ...state,\n        logoutInfo: {\n          ...state.logoutInfo,\n          request: true,\n          failedRequest: false,\n        },\n      };\n    }\n    case LOGOUT_REQUEST_SUCCESS: {\n      return {\n        ...state,\n        user: null,\n        logoutInfo: {\n          ...state.logoutInfo,\n          success: action.payload.success,\n          message: action.payload.message,\n          request: false,\n          failedRequest: false,\n        },\n      };\n    }\n    case LOGOUT_REQUEST_FAILED: {\n      return {\n        ...state,\n        logoutInfo: {\n          ...state.logoutInfo,\n          request: false,\n          failedRequest: true,\n        },\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import {\r\n  TFeedWsActions,\r\n  FEED_CONNECTION_SUCCESS,\r\n  FEED_CONNECTION_ERROR,\r\n  FEED_GET_MESSAGE,\r\n  FEED_CONNECTION_CLOSED,\r\n} from \"../action/ws-feed\";\r\nimport { orderStatus } from \"../constant\";\r\n\r\nconst initState: {\r\n  connected: boolean;\r\n  error: boolean;\r\n  total: number;\r\n  totalToday: number;\r\n  orders: ReadonlyArray<{\r\n    ingredients: ReadonlyArray<string>;\r\n    id: string;\r\n    status: orderStatus;\r\n    number: number;\r\n    createdAt: string;\r\n    updateAt: string;\r\n    name: string;\r\n  }>;\r\n} = {\r\n  connected: false,\r\n  error: false,\r\n  orders: [],\r\n  total: 0,\r\n  totalToday: 0,\r\n};\r\n\r\nexport const feedReducer = (state = initState, action: TFeedWsActions) => {\r\n  switch (action.type) {\r\n    case FEED_CONNECTION_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        connected: true,\r\n        error: false,\r\n      };\r\n    }\r\n    case FEED_CONNECTION_ERROR: {\r\n      return {\r\n        ...state,\r\n        connected: false,\r\n        error: true,\r\n      };\r\n    }\r\n    case FEED_CONNECTION_CLOSED: {\r\n      return {\r\n        ...state,\r\n        connected: false,\r\n        error: false,\r\n      };\r\n    }\r\n    case FEED_GET_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  TMyOrdersWsActions,\r\n  MY_ORDERS_CONNECTION_SUCCESS,\r\n  MY_ORDERS_CONNECTION_ERROR,\r\n  MY_ORDERS_GET_MESSAGE,\r\n  MY_ORDERS_CONNECTION_CLOSED,\r\n} from \"../action/ws-my-orders\";\r\nimport { orderStatus } from \"../constant\";\r\n\r\nconst initState: {\r\n  connected: boolean;\r\n  error: boolean;\r\n  total: number;\r\n  totalToday: number;\r\n  orders: ReadonlyArray<{\r\n    ingredients: ReadonlyArray<string>;\r\n    id: string;\r\n    status: orderStatus;\r\n    number: number;\r\n    createdAt: string;\r\n    updateAt: string;\r\n    name: string;\r\n  }>;\r\n} = {\r\n  connected: false,\r\n  error: false,\r\n  orders: [],\r\n  total: 0,\r\n  totalToday: 0,\r\n};\r\n\r\nexport const myOrdersReducer = (\r\n  state = initState,\r\n  action: TMyOrdersWsActions\r\n) => {\r\n  switch (action.type) {\r\n    case MY_ORDERS_CONNECTION_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        connected: true,\r\n        error: false,\r\n      };\r\n    }\r\n    case MY_ORDERS_CONNECTION_ERROR: {\r\n      return {\r\n        ...state,\r\n        connected: false,\r\n        error: true,\r\n      };\r\n    }\r\n    case MY_ORDERS_CONNECTION_CLOSED: {\r\n      return {\r\n        ...state,\r\n        connected: false,\r\n        error: false,\r\n      };\r\n    }\r\n    case MY_ORDERS_GET_MESSAGE: {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { burgerIngredientsReducer } from \"./burger-ingredients\";\r\nimport { burgerConstructorReducer } from \"./burger-constructor\";\r\nimport { ingredientDetailsReducer } from \"./ingredient-details\";\r\nimport { orderStateReducer } from \"./order-details\";\r\nimport { userStateReducer } from \"./user\";\r\nimport { feedReducer } from \"./feed\";\r\nimport { myOrdersReducer } from \"./my-orders\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  burgerIngredients: burgerIngredientsReducer,\r\n  burgerConstructor: burgerConstructorReducer,\r\n  ingredientDetails: ingredientDetailsReducer,\r\n  orderInfo: orderStateReducer,\r\n  userInfo: userStateReducer,\r\n  feed: feedReducer,\r\n  myOrders: myOrdersReducer,\r\n});\r\n","import { AnyAction, MiddlewareAPI, Middleware, Dispatch } from \"redux\";\r\nimport { TWsActions } from \"../types/data\";\r\nimport { AppDispatch, RootState } from '../types/index';\r\n\r\nexport const socketMiddleware = (wsActions: TWsActions): Middleware => {\r\n  return (store: MiddlewareAPI<AppDispatch, RootState>) => {\r\n    let socket: null | WebSocket = null;\r\n    return (next: Dispatch) => (action: AnyAction) => {\r\n      const { dispatch } = store;\r\n      const { type, payload } = action;\r\n      const { wsInit, wsClose, wsSendMessage, onOpen, onClose, onError, onMessage } = wsActions;\r\n      if (type === wsInit) {\r\n        socket = new WebSocket(payload);\r\n      }\r\n      if (socket && type === wsClose) {\r\n        socket.close();\r\n      }\r\n\r\n      if (socket) {\r\n        socket.onopen = (event) => {\r\n          dispatch({ type: onOpen, payload: event });\r\n        };\r\n\r\n        socket.onerror = (event) => {\r\n          dispatch({ type: onError, payload: event });\r\n        };\r\n\r\n        socket.onmessage = (event) => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n          const { success, ...restParsedData } = parsedData;\r\n\r\n          dispatch({ type: onMessage, payload: restParsedData });\r\n        };\r\n\r\n        socket.onclose = (event) => {\r\n          dispatch({ type: onClose, payload: event });\r\n        };\r\n\r\n        if (type === wsSendMessage) {\r\n          const message = { ...payload };\r\n          socket.send(JSON.stringify(message));\r\n        }\r\n      }\r\n\r\n      return next(action);\r\n    };\r\n  };\r\n};\r\n","import { rootReducer } from \"./reducers/\";\r\nimport { compose, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  FEED_CONNECTION_INIT,\r\n  FEED_CONNECTION_SUCCESS,\r\n  FEED_CONNECTION_CLOSED,\r\n  FEED_CONNECTION_ERROR,\r\n  FEED_GET_MESSAGE,\r\n  FEED_CONNECTION_CLOSE,\r\n} from \"./action/ws-feed\";\r\n\r\nimport {\r\n  MY_ORDERS_CONNECTION_INIT,\r\n  MY_ORDERS_CONNECTION_SUCCESS,\r\n  MY_ORDERS_CONNECTION_CLOSED,\r\n  MY_ORDERS_CONNECTION_ERROR,\r\n  MY_ORDERS_GET_MESSAGE,\r\n  MY_ORDERS_CONNECTION_CLOSE,\r\n} from \"./action/ws-my-orders\";\r\n\r\nimport { socketMiddleware } from \"./middleware/socketMiddleware\";\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst feedWsActions = {\r\n  wsInit: FEED_CONNECTION_INIT,\r\n  wsClose: FEED_CONNECTION_CLOSE,\r\n  onOpen: FEED_CONNECTION_SUCCESS,\r\n  onClose: FEED_CONNECTION_CLOSED,\r\n  onError: FEED_CONNECTION_ERROR,\r\n  onMessage: FEED_GET_MESSAGE,\r\n};\r\n\r\nconst myOrdersWsActions = {\r\n  wsInit: MY_ORDERS_CONNECTION_INIT,\r\n  wsClose: MY_ORDERS_CONNECTION_CLOSE,\r\n  onOpen: MY_ORDERS_CONNECTION_SUCCESS,\r\n  onClose: MY_ORDERS_CONNECTION_CLOSED,\r\n  onError: MY_ORDERS_CONNECTION_ERROR,\r\n  onMessage: MY_ORDERS_GET_MESSAGE,\r\n};\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(\r\n    thunk,\r\n    socketMiddleware(feedWsActions),\r\n    socketMiddleware(myOrdersWsActions)\r\n  )\r\n);\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/app\";\nimport { Provider } from \"react-redux\";\nimport store from \"./services/store\";\nimport { HashRouter  as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardOrder\":\"card-order_cardOrder__3yGQ3\",\"cardOrder_wrapper\":\"card-order_cardOrder_wrapper__3kidh\",\"cardOrder__info\":\"card-order_cardOrder__info__2W3QE\",\"cardOrder__orderNumber\":\"card-order_cardOrder__orderNumber__2Vp8j\",\"cardOrder__dateNumber\":\"card-order_cardOrder__dateNumber__3iRMh\",\"cardOrder__name\":\"card-order_cardOrder__name__3_cz7\",\"cardOrder__total\":\"card-order_cardOrder__total__2iULZ\",\"cardOrder__orderDetails\":\"card-order_cardOrder__orderDetails__dDydf\",\"cardOrder__listIngredients\":\"card-order_cardOrder__listIngredients__2UsPP\",\"cardOrder__listIngredientItem\":\"card-order_cardOrder__listIngredientItem__2pUtB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedPage\":\"feed_feedPage__1MCky\",\"feedPage__wrapper\":\"feed_feedPage__wrapper__1Cqdf\",\"feedPage__content\":\"feed_feedPage__content__12vKa\",\"feedList\":\"feed_feedList__1WxjS\",\"feedList__item\":\"feed_feedList__item__1tdBT\",\"feedStatusLists\":\"feed_feedStatusLists__3lyfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebarMenu\":\"sidebar-menu_sidebarMenu__1ebPt\",\"sidebarMenu__item\":\"sidebar-menu_sidebarMenu__item__1xXjT\",\"link\":\"sidebar-menu_link__b_5xX\",\"link__active\":\"sidebar-menu_link__active__1Uq7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerconstructorList__inner\":\"constructor-list_burgerconstructorList__inner__1jQK5\",\"burgerconstructorListOverflowHidden__inner\":\"constructor-list_burgerconstructorListOverflowHidden__inner__1ooNt\",\"burgerconstructorList__item\":\"constructor-list_burgerconstructorList__item__13tkB\",\"burgerconstructorList\":\"constructor-list_burgerconstructorList__1MF88\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__jEAQH\",\"profile__container\":\"profile_profile__container__3Kkwk\",\"profile__wrapper\":\"profile_profile__wrapper__2nNvk\",\"profileForm\":\"profile_profileForm__37zkS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderHistory\":\"order-history_orderHistory__3fAOu\",\"orderHistory__container\":\"order-history_orderHistory__container__2EXbB\",\"orderHistory__wrapper\":\"order-history_orderHistory__wrapper__2WdeH\",\"sidebarLeft\":\"order-history_sidebarLeft__2YKCi\",\"orderHistoryList\":\"order-history_orderHistoryList__pvCxN\",\"orderHistoryList__item\":\"order-history_orderHistoryList__item__2C4jz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"order-info_status__1nqj6\",\"orderInfo__main\":\"order-info_orderInfo__main__2HbJy\",\"orderInfo__total\":\"order-info_orderInfo__total__GrpI7\",\"orderInfo__footer\":\"order-info_orderInfo__footer__ppf5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerConstructor\":\"burger-constructor_burgerConstructor__3TwlH\",\"burgerConstructor__total\":\"burger-constructor_burgerConstructor__total__1WHC8\",\"buttonOrder\":\"burger-constructor_buttonOrder__DDrho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"modal_popup__2sn4l\",\"popup__close\":\"modal_popup__close__1IZKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderList\":\"order-list_orderList__vjUvg\",\"orderList__item\":\"order-list_orderList__item__2CBF7\",\"orderList__total\":\"order-list_orderList__total__1u0QT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerConstructorList__innerItem\":\"constructor-item_burgerConstructorList__innerItem__3qC_q\",\"wrapperConstructorElement\":\"constructor-item_wrapperConstructorElement__HNv9Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"templateConstructorElement\":\"template-constructor-element_templateConstructorElement__2r0aN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card__list\":\"ingredient-list_card__list__Q4lFC\",\"card__listItem\":\"ingredient-list_card__listItem__abi3B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"login_login__cujIw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"register_register__2-v_J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotPassword\":\"forgot-password_forgotPassword__bTvyJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resetPassword\":\"reset-password_resetPassword__39QRX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusList\":\"status-list_statusList__tL6MU\",\"statusList__item\":\"status-list_statusList__item__2WENI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconIngredient__img\":\"icon-ingredient_IconIngredient__img__3gbwi\",\"IconIngredient__text\":\"icon-ingredient_IconIngredient__text__3sIDa\"};"],"sourceRoot":""}